/* LuaImpl.cpp
Copyright (c) 2023 by Daniel Yoon

Endless Sky is free software: you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later version.

Endless Sky is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program. If not, see <https://www.gnu.org/licenses/>.
*/

#include "LuaImpl.h"

#include "ConditionsStore.h"
#include "GameData.h"
#include "Logger.h"
#include "Lua.h"

#include "Account.h"
// #include "AlertLabel.h"
// #include "AmmoDisplay.h"
// #include "Angle.h"
// #include "Animate.h"
#include "Armament.h"
#include "Audio.h"
#include "BankPanel.h"
#include "BatchDrawList.h"
#include "BatchShader.h"
#include "Bitset.h"
#include "BoardingPanel.h"
#include "Body.h"
#include "CaptureOdds.h"
#include "CargoHold.h"
#include "CategoryList.h"
#include "ClickZone.h"
#include "Collision.h"
#include "CollisionSet.h"
#include "CollisionType.h"
#include "Color.h"
#include "Command.h"
#include "Conversation.h"
#include "CoreStartData.h"
#include "DamageDealt.h"
#include "DamageProfile.h"
#include "DataFile.h"
#include "DataWriter.h"
#include "Date.h"
#include "Depreciation.h"
#include "Dialog.h"
#include "Dictionary.h"
#include "DistanceCalculationSettings.h"
#include "DistanceMap.h"
#include "Distribution.h"
#include "DrawList.h"
#include "Effect.h"
#include "Engine.h"
#include "EscortDisplay.h"
#include "ExclusiveItem.h"
#include "FighterHitHelper.h"
#include "File.h"
#include "FillShader.h"
#include "FireCommand.h"
#include "Fleet.h"
#include "FleetCargo.h"
#include "Flotsam.h"
#include "FogShader.h"
#include "FormationPattern.h"
#include "FrameTimer.h"
#include "Galaxy.h"
#include "GameAction.h"
#include "GameEvent.h"
#include "GameLoadingPanel.h"
#include "Gamerules.h"
#include "GameWindow.h"
#include "Government.h"
#include "HailPanel.h"
#include "Hardpoint.h"
#include "Hazard.h"
#include "HiringPanel.h"
#include "ImageBuffer.h"
#include "ImageSet.h"
#include "InfoPanelState.h"
#include "Information.h"
#include "ItemInfoDisplay.h"
#include "LineShader.h"
#include "LoadPanel.h"
#include "LocationFilter.h"
#include "LogbookPanel.h"
#include "MainPanel.h"
#include "MapDetailPanel.h"
#include "MapOutfitterPanel.h"
#include "MapPlanetCard.h"
#include "MapSalesPanel.h"
#include "MapShipyardPanel.h"
#include "Mask.h"
#include "MaskManager.h"
#include "MenuAnimationPanel.h"
#include "MenuPanel.h"
#include "MessageLogPanel.h"
#include "Messages.h"
#include "Minable.h"
#include "Mission.h"
#include "MissionAction.h"
#include "MissionPanel.h"
#include "Mortgage.h"
#include "Music.h"
#include "News.h"
#include "NPC.h"
#include "NPCAction.h"
#include "Outfit.h"
#include "OutfitInfoDisplay.h"
#include "OutfitterPanel.h"
#include "OutlineShader.h"
#include "Person.h"
#include "Personality.h"
#include "Planet.h"
#include "PlanetLabel.h"
#include "PlanetPanel.h"
#include "PlayerInfo.h"
#include "PlayerInfoPanel.h"
#include "Plugins.h"
#include "Point.h"
#include "PointerShader.h"
#include "Politics.h"
#include "Port.h"
#include "Preferences.h"
#include "PreferencesPanel.h"
#include "PrintData.h"
#include "Projectile.h"
#include "Radar.h"
#include "RaidFleet.h"
#include "Random.h"
#include "RandomEvent.h"
#include "RenderBuffer.h"
#include "RingShader.h"
#include "Sale.h"
#include "SavedGame.h"
#include "Screen.h"
#include "ScrollVar.h"
#include "Set.h"
#include "Shader.h"
#include "ShipEvent.h"
#include "ShipInfoDisplay.h"
#include "ShipInfoPanel.h"
#include "ShipJumpNavigation.h"
#include "ShipManager.h"
#include "ShipyardPanel.h"
#include "Sound.h"
#include "SpaceportPanel.h"
#include "Sprite.h"
#include "SpriteSet.h"
#include "SpriteShader.h"
#include "StarField.h"
#include "StartConditions.h"
#include "StartConditionsPanel.h"
#include "StellarObject.h"
#include "SystemEntry.h"
#include "System.h"
#include "TaskQueue.h"
#include "Test.h"
#include "TestData.h"
#include "TextReplacements.h"
#include "Trade.h"
#include "TradingPanel.h"
#include "UI.h"
#include "Variant.h"
#include "Visual.h"
#include "Weapon.h"
#include "Weather.h"
#include "Wormhole.h"
#include "WormholeStrategy.h"

#include <luabridge3/LuaBridge/LuaBridge.h>

#include <string>

using namespace std;

extern "C" int printMsg(lua_State *L)
{
	const char *message = luaL_checkstring(L, 1);
	int priority = (lua_isinteger(L, 2)) ? luaL_checkinteger(L, 2) : 3;
	if(priority <= static_cast<uint_fast8_t>(Messages::Importance::Low) && priority >= 0)
		Messages::Add(message, static_cast<Messages::Importance>(priority));
	else
		Logger::LogError("Lua Message Add Importance was invalid: " + to_string(priority));
	return 0;
}

extern "C" int debug(lua_State *L)
{
	const char *message = luaL_checkstring(L, 1);
	Logger::LogError(string("[Lua]: ") + message);
	return 0;
}

void LuaImpl::registerFunction(lua_State *L, lua_CFunction func, const char *name)
{
	lua_register(L, name, func);
}

void LuaImpl::registerAll(lua_State *L)
{
	registerFunction(L, printMsg, "es_addMsg");
	registerFunction(L, debug, "es_debug");
	luabridge::getGlobalNamespace(L)
		.beginNamespace("ES")
			.beginClass<Account>("Account")
				.addFunction("AddCredits", &Account::AddCredits)
				.addFunction("AddDebt", &Account::AddDebt)
				.addFunction("AddFine", &Account::AddFine)
				.addFunction("AddMortgage", &Account::AddMortgage)
				.addFunction("CreditScore", &Account::CreditScore)
				.addFunction("Credits", &Account::Credits)
				.addFunction("CrewSalariesOwed", &Account::CrewSalariesOwed)
				.addFunction("Load", &Account::Load)
				.addFunction("MaintenanceDue", &Account::MaintenanceDue)
				.addFunction("Mortgages", &Account::Mortgages)
				.addFunction("NetWorth", &Account::NetWorth)
				.addFunction("PayExtra", &Account::PayExtra)
				.addFunction("PayMaintenance", &Account::PayMaintenance)
				.addFunction("PaySalaries", &Account::PaySalaries)
				.addFunction("Prequalify", &Account::Prequalify)
				.addFunction("SalariesIncome", &Account::SalariesIncome)
				.addFunction("SalariesIncomeTotal", &Account::SalariesIncomeTotal)
				.addFunction("Save", &Account::Save)
				.addFunction("SetSalaryIncome", &Account::SetSalaryIncome)
				.addFunction("Step", &Account::Step)
				.addFunction("TotalDebt", &Account::TotalDebt)
			.endClass()
// 			.beginClass<AlertLabel>("AlertLabel")
// 				.addFunction("Draw", &AlertLabel::Draw)
// 			.endClass()
			.beginClass<Armament>("Armament")
				.addFunction("Add", &Armament::Add)
				.addFunction("Aim", &Armament::Aim)
				.addFunction("FinishLoading", &Armament::FinishLoading)
				.addFunction("Fire", &Armament::Fire)
				.addFunction("GunCount", &Armament::GunCount)
				.addFunction("ReloadAll", &Armament::ReloadAll)
				.addFunction("Step", &Armament::Step)
				.addFunction("Swap", &Armament::Swap)
				.addFunction("TurretCount", &Armament::TurretCount)
				.addFunction("UninstallAll", &Armament::UninstallAll)
			.endClass()
			.beginClass<Audio>("Audio")
// 				.addFunction("CheckReferences", &Audio::CheckReferences)
// 				.addFunction("GetProgress", &Audio::GetProgress)
// 				.addFunction("Init", &Audio::Init)
// // 				.addFunction("Play", &Audio::Play)
// 				.addFunction("PlayMusic", &Audio::PlayMusic)
// 				.addFunction("Quit", &Audio::Quit)
// 				.addFunction("SetVolume", &Audio::SetVolume)
// 				.addFunction("Step", &Audio::Step)
// 				.addFunction("Update", &Audio::Update)
// 				.addFunction("Volume", &Audio::Volume)
			.endClass()
			.beginClass<BankPanel>("BankPanel")
				.addFunction("Draw", &BankPanel::Draw)
				.addFunction("Step", &BankPanel::Step)
			.endClass()
			.beginClass<CaptureOdds>("CaptureOdds")
				.addFunction("AttackerCasualties", &CaptureOdds::AttackerCasualties)
				.addFunction("AttackerPower", &CaptureOdds::AttackerPower)
				.addFunction("DefenderCasualties", &CaptureOdds::DefenderCasualties)
				.addFunction("DefenderPower", &CaptureOdds::DefenderPower)
				.addFunction("Odds", &CaptureOdds::Odds)
			.endClass()
			.beginClass<CargoHold>("CargoHold")
// 				.addFunction("Add", &CargoHold::Add)
// 				.addFunction("Add", &CargoHold::Add)
				.addFunction("AddMissionCargo", &CargoHold::AddMissionCargo)
				.addFunction("BunksFree", &CargoHold::BunksFree)
				.addFunction("Clear", &CargoHold::Clear)
				.addFunction("CommoditiesSize", &CargoHold::CommoditiesSize)
				.addFunction("Free", &CargoHold::Free)
				.addFunction("FreePrecise", &CargoHold::FreePrecise)
// 				.addFunction("Get", &CargoHold::Get)
// 				.addFunction("Get", &CargoHold::Get)
// 				.addFunction("Get", &CargoHold::Get)
				.addFunction("GetPassengers", &CargoHold::GetPassengers)
				.addFunction("HasMissionCargo", &CargoHold::HasMissionCargo)
				.addFunction("HasOutfits", &CargoHold::HasOutfits)
				.addFunction("IllegalCargoAmount", &CargoHold::IllegalCargoAmount)
				.addFunction("IllegalCargoFine", &CargoHold::IllegalCargoFine)
				.addFunction("IllegalPassengersFine", &CargoHold::IllegalPassengersFine)
				.addFunction("IsEmpty", &CargoHold::IsEmpty)
				.addFunction("Load", &CargoHold::Load)
				.addFunction("MissionCargoSize", &CargoHold::MissionCargoSize)
				.addFunction("OutfitsSize", &CargoHold::OutfitsSize)
				.addFunction("OutfitsSizePrecise", &CargoHold::OutfitsSizePrecise)
				.addFunction("Passengers", &CargoHold::Passengers)
// 				.addFunction("Remove", &CargoHold::Remove)
// 				.addFunction("Remove", &CargoHold::Remove)
				.addFunction("RemoveMissionCargo", &CargoHold::RemoveMissionCargo)
				.addFunction("Save", &CargoHold::Save)
				.addFunction("SetBunks", &CargoHold::SetBunks)
				.addFunction("SetSize", &CargoHold::SetSize)
				.addFunction("Size", &CargoHold::Size)
// 				.addFunction("Transfer", &CargoHold::Transfer)
// 				.addFunction("Transfer", &CargoHold::Transfer)
// 				.addFunction("Transfer", &CargoHold::Transfer)
				.addFunction("TransferAll", &CargoHold::TransferAll)
				.addFunction("TransferPassengers", &CargoHold::TransferPassengers)
				.addFunction("Used", &CargoHold::Used)
				.addFunction("UsedPrecise", &CargoHold::UsedPrecise)
				.addFunction("Value", &CargoHold::Value)
			.endClass()
			.beginClass<CategoryList>("CategoryList")
				.addFunction("Contains", &CategoryList::Contains)
// 				.addFunction("GetCategory", &CategoryList::GetCategory)
				.addFunction("Load", &CategoryList::Load)
				.addFunction("Sort", &CategoryList::Sort)
			.endClass()
			.beginClass<Command>("Command")
// 				.addFunction("And", &Command::And)
// 				.addFunction("AndNot", &Command::AndNot)
// // 				.addFunction("Clear", &Command::Clear)
// // 				.addFunction("Clear", &Command::Clear)
// // 				.addFunction("Command", &Command::Command)
// 				.addFunction("Has", &Command::Has)
// 				.addFunction("HasBinding", &Command::HasBinding)
// 				.addFunction("HasConflict", &Command::HasConflict)
// 				.addFunction("Load", &Command::Load)
// 				.addFunction("LoadSettings", &Command::LoadSettings)
// 				.addFunction("ReadKeyboard", &Command::ReadKeyboard)
// 				.addFunction("ReplaceNamesWithKeys", &Command::ReplaceNamesWithKeys)
// 				.addFunction("SaveSettings", &Command::SaveSettings)
// 				.addFunction("Set", &Command::Set)
// 				.addFunction("SetKey", &Command::SetKey)
// 				.addFunction("SetTurn", &Command::SetTurn)
// 				.addFunction("Turn", &Command::Turn)
// // 				.addFunction("bool", &Command::bool)
// // 				.addProperty("AFTERBURNER", &Command::AFTERBURNER)
// // 				.addProperty("AMMO", &Command::AMMO)
// // 				.addProperty("AUTOSTEER", &Command::AUTOSTEER)
// // 				.addProperty("BACK", &Command::BACK)
// // 				.addProperty("BOARD", &Command::BOARD)
// // 				.addProperty("CLOAK", &Command::CLOAK)
// // 				.addProperty("DEPLOY", &Command::DEPLOY)
// // 				.addProperty("FASTFORWARD", &Command::FASTFORWARD)
// // 				.addProperty("FIGHT", &Command::FIGHT)
// // 				.addProperty("FLEET_JUMP", &Command::FLEET_JUMP)
// // 				.addProperty("FORWARD", &Command::FORWARD)
// // 				.addProperty("FULLSCREEN", &Command::FULLSCREEN)
// // 				.addProperty("GATHER", &Command::GATHER)
// // 				.addProperty("HAIL", &Command::HAIL)
// // 				.addProperty("HARVEST", &Command::HARVEST)
// // 				.addProperty("HELP", &Command::HELP)
// // 				.addProperty("HOLD", &Command::HOLD)
// // 				.addProperty("INFO", &Command::INFO)
// // 				.addProperty("JUMP", &Command::JUMP)
// // 				.addProperty("LAND", &Command::LAND)
// // 				.addProperty("LEFT", &Command::LEFT)
// // 				.addProperty("MAP", &Command::MAP)
// // 				.addProperty("MENU", &Command::MENU)
// // 				.addProperty("MESSAGE_LOG", &Command::MESSAGE_LOG)
// // 				.addProperty("MOUSE_TURNING_HOLD", &Command::MOUSE_TURNING_HOLD)
// // 				.addProperty("NEAREST", &Command::NEAREST)
// // 				.addProperty("NEAREST_ASTEROID", &Command::NEAREST_ASTEROID)
// // 				.addProperty("NONE", &Command::NONE)
// // 				.addProperty("PRIMARY", &Command::PRIMARY)
// // 				.addProperty("RIGHT", &Command::RIGHT)
// // 				.addProperty("SCAN", &Command::SCAN)
// // 				.addProperty("SECONDARY", &Command::SECONDARY)
// // 				.addProperty("SELECT", &Command::SELECT)
// // 				.addProperty("SHIFT", &Command::SHIFT)
// // 				.addProperty("STOP", &Command::STOP)
// // 				.addProperty("TARGET", &Command::TARGET)
// // 				.addProperty("TURRET_TRACKING", &Command::TURRET_TRACKING)
// // 				.addProperty("WAIT", &Command::WAIT)
			.endClass()
			.beginClass<Trade::Commodity>("Commodity")
// 				.addFunction("Load", &Commodity::Load)
// 				.addProperty("name", &Commodity::name)
			.endClass()
			.beginClass<ConditionsStore::ConditionEntry>("ConditionEntry")
// 				.addFunction("Add", &ConditionEntry::Add)
// 				.addFunction("Clear", &ConditionEntry::Clear)
// // 				.addFunction("ConditionsStore", &ConditionEntry::ConditionsStore)
// // 				.addFunction("ConditionsStore", &ConditionEntry::ConditionsStore)
// // 				.addFunction("ConditionsStore", &ConditionEntry::ConditionsStore)
// 				.addFunction("Erase", &ConditionEntry::Erase)
// 				.addFunction("Get", &ConditionEntry::Get)
// 				.addFunction("Has", &ConditionEntry::Has)
// 				.addFunction("Load", &ConditionEntry::Load)
// 				.addFunction("PrimariesSize", &ConditionEntry::PrimariesSize)
// 				.addFunction("Save", &ConditionEntry::Save)
// 				.addFunction("Set", &ConditionEntry::Set)
// 				.addFunction("SetEraseFunction", &ConditionEntry::SetEraseFunction)
// 				.addFunction("SetGetFunction", &ConditionEntry::SetGetFunction)
// 				.addFunction("SetHasFunction", &ConditionEntry::SetHasFunction)
// 				.addFunction("SetSetFunction", &ConditionEntry::SetSetFunction)
// 				.addFunction("int64_t", &ConditionEntry::int64_t)
// // 				.addProperty("ConditionEntry", &ConditionEntry::ConditionEntry)
// // 				.addProperty("ConditionEntry", &ConditionEntry::ConditionEntry)
// 				.addProperty("ConditionsStore", &ConditionEntry::ConditionsStore)
			.endClass()
			.beginClass<CoreStartData>("CoreStartData")
				.addFunction("GetDate", &CoreStartData::GetDate)
				.addFunction("Load", &CoreStartData::Load)
				.addFunction("Save", &CoreStartData::Save)
			.endClass()
			.beginClass<DamageProfile>("DamageProfile")
// 				.addFunction("CalculateDamage", &DamageProfile::CalculateDamage)
// // 				.addFunction("DamageProfile", &DamageProfile::DamageProfile)
// // 				.addFunction("DamageProfile", &DamageProfile::DamageProfile)
			.endClass()
			.beginClass<DataFile>("DataFile")
// 				.addFunction("BoolValue", &DataFile::BoolValue)
// 				.addFunction("DataNode", &DataFile::DataNode)
// // 				.addFunction("IsBool", &DataFile::IsBool)
// // 				.addFunction("IsBool", &DataFile::IsBool)
// // 				.addFunction("IsNumber", &DataFile::IsNumber)
// // 				.addFunction("IsNumber", &DataFile::IsNumber)
// 				.addFunction("PrintTrace", &DataFile::PrintTrace)
// // 				.addFunction("Value", &DataFile::Value)
// // 				.addFunction("Value", &DataFile::Value)
			.endClass()
			.beginClass<Date>("Date")
				.addFunction("Day", &Date::Day)
				.addFunction("DaysSinceEpoch", &Date::DaysSinceEpoch)
				.addFunction("DaysSinceYearStart", &Date::DaysSinceYearStart)
				.addFunction("DaysUntilYearEnd", &Date::DaysUntilYearEnd)
				.addFunction("LongString", &Date::LongString)
				.addFunction("Month", &Date::Month)
				.addFunction("Year", &Date::Year)
// 				.addFunction("bool", &Date::bool)
			.endClass()
			.beginClass<Depreciation>("Depreciation")
// // 				.addFunction("Buy", &Depreciation::Buy)
// // 				.addFunction("Buy", &Depreciation::Buy)
// 				.addFunction("Full", &Depreciation::Full)
// 				.addFunction("Init", &Depreciation::Init)
// 				.addFunction("IsLoaded", &Depreciation::IsLoaded)
// 				.addFunction("Load", &Depreciation::Load)
// 				.addFunction("Save", &Depreciation::Save)
// // 				.addFunction("Value", &Depreciation::Value)
// // 				.addFunction("Value", &Depreciation::Value)
// // 				.addFunction("Value", &Depreciation::Value)
// // 				.addFunction("Value", &Depreciation::Value)
			.endClass()
			.beginClass<Dictionary>("Dictionary")
// // 				.addFunction("Get", &Dictionary::Get)
// // 				.addFunction("Get", &Dictionary::Get)
			.endClass()
			.beginClass<DisplayText>("DisplayText")
			.endClass()
			.beginClass<DistanceCalculationSettings>("DistanceCalculationSettings")
				.addFunction("AssumesJumpDrive", &DistanceCalculationSettings::AssumesJumpDrive)
// 				.addFunction("DistanceCalculationSettings", &DistanceCalculationSettings::DistanceCalculationSettings)
				.addFunction("Load", &DistanceCalculationSettings::Load)
				.addFunction("WormholeStrat", &DistanceCalculationSettings::WormholeStrat)
			.endClass()
			.beginClass<DrawList>("DrawList")
// // 				.addFunction("Add", &DrawList::Add)
// // 				.addFunction("Add", &DrawList::Add)
// 				.addFunction("AddSwizzled", &DrawList::AddSwizzled)
// 				.addFunction("AddUnblurred", &DrawList::AddUnblurred)
// 				.addFunction("Clear", &DrawList::Clear)
// 				.addFunction("Draw", &DrawList::Draw)
// 				.addFunction("SetCenter", &DrawList::SetCenter)
			.endClass()
// 			.beginClass<Edge>("Edge")
// 				.addFunction("Days", &Edge::Days)
// // 				.addFunction("DistanceMap", &Edge::DistanceMap)
// // 				.addFunction("DistanceMap", &Edge::DistanceMap)
// 				.addFunction("Edge", &Edge::Edge)
// 				.addFunction("HasRoute", &Edge::HasRoute)
// 				.addFunction("RequiredFuel", &Edge::RequiredFuel)
// 			.endClass()
			.beginClass<Messages::Entry>("Entry")
// 				.addFunction("Add", &Entry::Add)
// 				.addFunction("AddLog", &Entry::AddLog)
// 				.addFunction("Reset", &Entry::Reset)
// 				.addProperty("importance", &Entry::importance)
// 				.addProperty("message", &Entry::message)
// 				.addProperty("step", &Entry::step)
			.endClass()
// 			.beginClass<ExclusiveItem>("ExclusiveItem")
// 			.endClass()
// 			.beginClass<FighterDodgePolicy>("FighterDodgePolicy")
// 				.addFunction("DepreciationDaily", &FighterDodgePolicy::DepreciationDaily)
// 				.addFunction("DepreciationGracePeriod", &FighterDodgePolicy::DepreciationGracePeriod)
// 				.addFunction("DepreciationMaxAge", &FighterDodgePolicy::DepreciationMaxAge)
// 				.addFunction("DepreciationMin", &FighterDodgePolicy::DepreciationMin)
// 				.addFunction("FightersHitWhenDisabled", &FighterDodgePolicy::FightersHitWhenDisabled)
// 				.addFunction("Load", &FighterDodgePolicy::Load)
// 				.addFunction("NPCMaxMiningTime", &FighterDodgePolicy::NPCMaxMiningTime)
// 				.addFunction("NoPersonSpawnWeight", &FighterDodgePolicy::NoPersonSpawnWeight)
// 				.addFunction("PersonSpawnPeriod", &FighterDodgePolicy::PersonSpawnPeriod)
// 				.addFunction("UniversalFrugalThreshold", &FighterDodgePolicy::UniversalFrugalThreshold)
// 				.addFunction("UniversalRamscoopActive", &FighterDodgePolicy::UniversalRamscoopActive)
// 			.endClass()
			.beginClass<FighterHitHelper>("FighterHitHelper")
// 				.addProperty("false", &FighterHitHelper::false)
// 				.addProperty("true", &FighterHitHelper::true)
			.endClass()
			.beginClass<File>("File")
// 				.addFunction("File", &File::File)
// 				.addFunction("bool", &File::bool)
			.endClass()
// 			.beginClass<Files>("Files")
// 				.addFunction("Copy", &Files::Copy)
// 				.addFunction("CreateFolder", &Files::CreateFolder)
// 				.addFunction("Delete", &Files::Delete)
// 				.addFunction("Exists", &Files::Exists)
// 				.addFunction("Init", &Files::Init)
// 				.addFunction("LogErrorToFile", &Files::LogErrorToFile)
// 				.addFunction("Move", &Files::Move)
// 				.addFunction("Name", &Files::Name)
// 				.addFunction("OpenUserPluginFolder", &Files::OpenUserPluginFolder)
// 				.addFunction("OpenUserSavesFolder", &Files::OpenUserSavesFolder)
// // 				.addFunction("Read", &Files::Read)
// // 				.addFunction("Read", &Files::Read)
// 				.addFunction("RecursiveList", &Files::RecursiveList)
// 				.addFunction("Timestamp", &Files::Timestamp)
// // 				.addFunction("Write", &Files::Write)
// // 				.addFunction("Write", &Files::Write)
// 			.endClass()
			.beginClass<FillShader>("FillShader")
// 				.addFunction("Fill", &FillShader::Fill)
// 				.addFunction("Init", &FillShader::Init)
			.endClass()
			.beginClass<Fleet>("Fleet")
// 				.addFunction("Enter", &Fleet::Enter)
				.addFunction("IsValid", &Fleet::IsValid)
				.addFunction("Load", &Fleet::Load)
// 				.addFunction("Place", &Fleet::Place)
				.addFunction("RemoveInvalidVariants", &Fleet::RemoveInvalidVariants)
				.addFunction("Strength", &Fleet::Strength)
			.endClass()
			.beginClass<FleetCargo>("FleetCargo")
				.addFunction("Load", &FleetCargo::Load)
				.addFunction("LoadSingle", &FleetCargo::LoadSingle)
				.addFunction("SetCargo", &FleetCargo::SetCargo)
			.endClass()
			.beginClass<Flotsam>("Flotsam")
// 				.addFunction("Count", &Flotsam::Count)
// 				.addFunction("Mass", &Flotsam::Mass)
// 				.addFunction("Move", &Flotsam::Move)
// // 				.addFunction("Place", &Flotsam::Place)
// // 				.addFunction("Place", &Flotsam::Place)
// // 				.addFunction("Place", &Flotsam::Place)
// 				.addFunction("SetVelocity", &Flotsam::SetVelocity)
// 				.addFunction("TransferTo", &Flotsam::TransferTo)
// 				.addFunction("UnitSize", &Flotsam::UnitSize)
// 				.addProperty("TONS_PER_BOX", &Flotsam::TONS_PER_BOX)
			.endClass()
			.beginClass<FogShader>("FogShader")
// 				.addFunction("Draw", &FogShader::Draw)
// 				.addFunction("Init", &FogShader::Init)
// 				.addFunction("Redraw", &FogShader::Redraw)
			.endClass()
			.beginClass<Font>("Font")
// // 				.addFunction("Draw", &Font::Draw)
// // 				.addFunction("Draw", &Font::Draw)
// // 				.addFunction("DrawAliased", &Font::DrawAliased)
// // 				.addFunction("DrawAliased", &Font::DrawAliased)
// 				.addFunction("Font", &Font::Font)
// 				.addFunction("FormattedWidth", &Font::FormattedWidth)
// 				.addFunction("Load", &Font::Load)
// 				.addFunction("Width", &Font::Width)
			.endClass()
// 			.beginClass<FontSet>("FontSet")
// 				.addFunction("Add", &FontSet::Add)
// 			.endClass()
// 			.beginClass<Format>("Format")
// 				.addFunction("Capitalize", &Format::Capitalize)
// 				.addFunction("CargoString", &Format::CargoString)
// 				.addFunction("ChicagoForm", &Format::ChicagoForm)
// 				.addFunction("CreditString", &Format::CreditString)
// 				.addFunction("Credits", &Format::Credits)
// 				.addFunction("Decimal", &Format::Decimal)
// 				.addFunction("ExpandConditions", &Format::ExpandConditions)
// 				.addFunction("LowerCase", &Format::LowerCase)
// 				.addFunction("MLAForm", &Format::MLAForm)
// 				.addFunction("MassString", &Format::MassString)
// 				.addFunction("Number", &Format::Number)
// 				.addFunction("Parse", &Format::Parse)
// 				.addFunction("PlayTime", &Format::PlayTime)
// 				.addFunction("Replace", &Format::Replace)
// 				.addFunction("ReplaceAll", &Format::ReplaceAll)
// 				.addFunction("Search", &Format::Search)
// 				.addFunction("WordForm", &Format::WordForm)
// 			.endClass()
			.beginClass<FrameTimer>("FrameTimer")
// 				.addFunction("FrameTimer", &FrameTimer::FrameTimer)
// 				.addFunction("SetFrameRate", &FrameTimer::SetFrameRate)
// 				.addFunction("Time", &FrameTimer::Time)
// 				.addFunction("Wait", &FrameTimer::Wait)
			.endClass()
// 			.beginClass<Planet::Friendliness>("Friendliness")
// 				.addFunction("Bribe", &Friendliness::Bribe)
// // 				.addFunction("CanLand", &Friendliness::CanLand)
// // 				.addFunction("CanLand", &Friendliness::CanLand)
// 				.addFunction("CanUseServices", &Friendliness::CanUseServices)
// 				.addFunction("DemandTribute", &Friendliness::DemandTribute)
// 				.addFunction("DeployDefense", &Friendliness::DeployDefense)
// 				.addFunction("FinishLoading", &Friendliness::FinishLoading)
// 				.addFunction("GetBribeFraction", &Friendliness::GetBribeFraction)
// 				.addFunction("GetFriendliness", &Friendliness::GetFriendliness)
// 				.addFunction("HasCustomSecurity", &Friendliness::HasCustomSecurity)
// 				.addFunction("HasFuelFor", &Friendliness::HasFuelFor)
// 				.addFunction("HasNamedPort", &Friendliness::HasNamedPort)
// 				.addFunction("HasOutfitter", &Friendliness::HasOutfitter)
// 				.addFunction("HasServices", &Friendliness::HasServices)
// 				.addFunction("HasShipyard", &Friendliness::HasShipyard)
// 				.addFunction("IsAccessible", &Friendliness::IsAccessible)
// 				.addFunction("IsDefending", &Friendliness::IsDefending)
// 				.addFunction("IsInSystem", &Friendliness::IsInSystem)
// 				.addFunction("IsInhabited", &Friendliness::IsInhabited)
// 				.addFunction("IsUnrestricted", &Friendliness::IsUnrestricted)
// 				.addFunction("IsValid", &Friendliness::IsValid)
// 				.addFunction("IsWormhole", &Friendliness::IsWormhole)
// 				.addFunction("Load", &Friendliness::Load)
// 				.addFunction("RemoveSystem", &Friendliness::RemoveSystem)
// 				.addFunction("RequiredReputation", &Friendliness::RequiredReputation)
// 				.addFunction("ResetDefense", &Friendliness::ResetDefense)
// 				.addFunction("Security", &Friendliness::Security)
// 				.addFunction("SetName", &Friendliness::SetName)
// 				.addFunction("SetSystem", &Friendliness::SetSystem)
// 			.endClass()
			.beginClass<Galaxy>("Galaxy")
				.addFunction("Load", &Galaxy::Load)
			.endClass()
			.beginClass<GameAction>("GameAction")
// 				.addFunction("Do", &GameAction::Do)
// 				.addFunction("Instantiate", &GameAction::Instantiate)
// 				.addFunction("Load", &GameAction::Load)
// 				.addFunction("LoadSingle", &GameAction::LoadSingle)
// 				.addFunction("Save", &GameAction::Save)
// 				.addFunction("Validate", &GameAction::Validate)
			.endClass()
			.beginClass<GameData>("GameData")
// 				.addFunction("AddJumpRange", &GameData::AddJumpRange)
// 				.addFunction("AddPurchase", &GameData::AddPurchase)
// 				.addFunction("Change", &GameData::Change)
// 				.addFunction("CheckReferences", &GameData::CheckReferences)
// 				.addFunction("DestroyPersons", &GameData::DestroyPersons)
// 				.addFunction("DrawMenuBackground", &GameData::DrawMenuBackground)
// 				.addFunction("FinishLoading", &GameData::FinishLoading)
// 				.addFunction("GetProgress", &GameData::GetProgress)
// 				.addFunction("HasLandingMessage", &GameData::HasLandingMessage)
// 				.addFunction("HelpMessage", &GameData::HelpMessage)
// 				.addFunction("IsLoaded", &GameData::IsLoaded)
// 				.addFunction("LoadSettings", &GameData::LoadSettings)
// 				.addFunction("LoadShaders", &GameData::LoadShaders)
// 				.addFunction("Preload", &GameData::Preload)
// 				.addFunction("ReadEconomy", &GameData::ReadEconomy)
// 				.addFunction("ResetPersons", &GameData::ResetPersons)
// 				.addFunction("Revert", &GameData::Revert)
// 				.addFunction("SetDate", &GameData::SetDate)
// 				.addFunction("SetHaze", &GameData::SetHaze)
// 				.addFunction("SolarPower", &GameData::SolarPower)
// 				.addFunction("SolarWind", &GameData::SolarWind)
// 				.addFunction("StepEconomy", &GameData::StepEconomy)
// 				.addFunction("UpdateSystems", &GameData::UpdateSystems)
// 				.addFunction("WriteEconomy", &GameData::WriteEconomy)
			.endClass()
			.beginClass<GameEvent>("GameEvent")
				.addFunction("Disable", &GameEvent::Disable)
// 				.addFunction("GameEvent", &GameEvent::GameEvent)
				.addFunction("IsValid", &GameEvent::IsValid)
				.addFunction("Load", &GameEvent::Load)
				.addFunction("Save", &GameEvent::Save)
				.addFunction("SetDate", &GameEvent::SetDate)
				.addFunction("SetName", &GameEvent::SetName)
			.endClass()
			.beginClass<GameLoadingPanel>("GameLoadingPanel")
// 				.addFunction("Draw", &GameLoadingPanel::Draw)
// 				.addFunction("Step", &GameLoadingPanel::Step)
			.endClass()
			.beginClass<GameWindow>("GameWindow")
// 				.addFunction("AdjustViewport", &GameWindow::AdjustViewport)
// 				.addFunction("ExitWithError", &GameWindow::ExitWithError)
// 				.addFunction("Height", &GameWindow::Height)
// 				.addFunction("Init", &GameWindow::Init)
// 				.addFunction("IsFullscreen", &GameWindow::IsFullscreen)
// 				.addFunction("IsMaximized", &GameWindow::IsMaximized)
// 				.addFunction("Quit", &GameWindow::Quit)
// 				.addFunction("SDLVersions", &GameWindow::SDLVersions)
// 				.addFunction("SetIcon", &GameWindow::SetIcon)
// 				.addFunction("SetVSync", &GameWindow::SetVSync)
// 				.addFunction("Step", &GameWindow::Step)
// 				.addFunction("ToggleFullscreen", &GameWindow::ToggleFullscreen)
// 				.addFunction("Width", &GameWindow::Width)
			.endClass()
			.beginClass<Government>("Government")
				.addFunction("AddReputation", &Government::AddReputation)
				.addFunction("AttitudeToward", &Government::AttitudeToward)
				.addFunction("Bribe", &Government::Bribe)
// 				.addFunction("CanEnforce", &Government::CanEnforce)
// 				.addFunction("CanEnforce", &Government::CanEnforce)
// 				.addFunction("Condemns", &Government::Condemns)
// 				.addFunction("Condemns", &Government::Condemns)
				.addFunction("CrewAttack", &Government::CrewAttack)
				.addFunction("CrewDefense", &Government::CrewDefense)
				.addFunction("Fine", &Government::Fine)
// 				.addFunction("Fines", &Government::Fines)
// 				.addFunction("Fines", &Government::Fines)
				.addFunction("FinesContents", &Government::FinesContents)
				.addFunction("GetBribeFraction", &Government::GetBribeFraction)
				.addFunction("GetFineFraction", &Government::GetFineFraction)
				.addFunction("GetHail", &Government::GetHail)
				.addFunction("GetSwizzle", &Government::GetSwizzle)
				.addFunction("InitialPlayerReputation", &Government::InitialPlayerReputation)
// 				.addFunction("IsEnemy", &Government::IsEnemy)
// 				.addFunction("IsEnemy", &Government::IsEnemy)
				.addFunction("IsPlayer", &Government::IsPlayer)
				.addFunction("IsProvokedOnScan", &Government::IsProvokedOnScan)
// 				.addFunction("IsRestrictedFrom", &Government::IsRestrictedFrom)
// 				.addFunction("IsRestrictedFrom", &Government::IsRestrictedFrom)
				.addFunction("Load", &Government::Load)
				.addFunction("Offend", &Government::Offend)
				.addFunction("PenaltyFor", &Government::PenaltyFor)
				.addFunction("Reputation", &Government::Reputation)
				.addFunction("ReputationMax", &Government::ReputationMax)
				.addFunction("ReputationMin", &Government::ReputationMin)
				.addFunction("SendUntranslatedHails", &Government::SendUntranslatedHails)
				.addFunction("SetName", &Government::SetName)
				.addFunction("SetReputation", &Government::SetReputation)
				.addFunction("Trusts", &Government::Trusts)
			.endClass()
			.beginClass<HailPanel>("HailPanel")
// 				.addFunction("Draw", &HailPanel::Draw)
			.endClass()
			.beginClass<Hardpoint>("Hardpoint")
				.addFunction("Aim", &Hardpoint::Aim)
				.addFunction("BurstRemaining", &Hardpoint::BurstRemaining)
				.addFunction("CanAim", &Hardpoint::CanAim)
// 				.addFunction("Fire", &Hardpoint::Fire)
				.addFunction("FireAntiMissile", &Hardpoint::FireAntiMissile)
				.addFunction("FireTractorBeam", &Hardpoint::FireTractorBeam)
				.addFunction("HarmonizedAngle", &Hardpoint::HarmonizedAngle)
				.addFunction("Install", &Hardpoint::Install)
				.addFunction("IsHoming", &Hardpoint::IsHoming)
				.addFunction("IsOmnidirectional", &Hardpoint::IsOmnidirectional)
				.addFunction("IsParallel", &Hardpoint::IsParallel)
				.addFunction("IsReady", &Hardpoint::IsReady)
				.addFunction("IsSpecial", &Hardpoint::IsSpecial)
				.addFunction("IsTurret", &Hardpoint::IsTurret)
				.addFunction("IsUnder", &Hardpoint::IsUnder)
				.addFunction("Jam", &Hardpoint::Jam)
				.addFunction("Reload", &Hardpoint::Reload)
				.addFunction("Step", &Hardpoint::Step)
				.addFunction("Uninstall", &Hardpoint::Uninstall)
				.addFunction("WasFiring", &Hardpoint::WasFiring)
// 				.addProperty("baseAngle", &Hardpoint::baseAngle)
// 				.addProperty("isOmnidirectional", &Hardpoint::isOmnidirectional)
// 				.addProperty("isParallel", &Hardpoint::isParallel)
// 				.addProperty("maxArc", &Hardpoint::maxArc)
// 				.addProperty("minArc", &Hardpoint::minArc)
			.endClass()
			.beginClass<Hazard>("Hazard")
				.addFunction("Deviates", &Hazard::Deviates)
				.addFunction("IsValid", &Hazard::IsValid)
				.addFunction("Load", &Hazard::Load)
				.addFunction("MaxRange", &Hazard::MaxRange)
				.addFunction("MinRange", &Hazard::MinRange)
				.addFunction("Period", &Hazard::Period)
				.addFunction("RandomDuration", &Hazard::RandomDuration)
				.addFunction("RandomStrength", &Hazard::RandomStrength)
				.addFunction("SystemWide", &Hazard::SystemWide)
			.endClass()
			.beginClass<HiringPanel>("HiringPanel")
// 				.addFunction("Draw", &HiringPanel::Draw)
// 				.addFunction("HiringPanel", &HiringPanel::HiringPanel)
// 				.addFunction("Step", &HiringPanel::Step)
			.endClass()
// 			.beginClass<Icon>("Icon")
// 				.addFunction("Add", &Icon::Add)
// 				.addFunction("Clear", &Icon::Clear)
// 				.addFunction("Draw", &Icon::Draw)
// 				.addFunction("Height", &Icon::Height)
// 				.addFunction("Merge", &Icon::Merge)
// 				.addProperty("cannotJump", &Icon::cannotJump)
// 				.addProperty("cost", &Icon::cost)
// 				.addProperty("isDisabled", &Icon::isDisabled)
// 				.addProperty("isHere", &Icon::isHere)
// 				.addProperty("isHostile", &Icon::isHostile)
// 				.addProperty("isSelected", &Icon::isSelected)
// 				.addProperty("notReadyToJump", &Icon::notReadyToJump)
// 				.addProperty("system", &Icon::system)
// 			.endClass()
			.beginClass<ImageBuffer>("ImageBuffer")
// 				.addFunction("Allocate", &ImageBuffer::Allocate)
// 				.addFunction("Clear", &ImageBuffer::Clear)
// 				.addFunction("Frames", &ImageBuffer::Frames)
// 				.addFunction("Height", &ImageBuffer::Height)
// 				.addFunction("Read", &ImageBuffer::Read)
// 				.addFunction("ShrinkToHalfSize", &ImageBuffer::ShrinkToHalfSize)
// 				.addFunction("Width", &ImageBuffer::Width)
			.endClass()
			.beginClass<ImageSet>("ImageSet")
// 				.addFunction("Add", &ImageSet::Add)
// 				.addFunction("ImageSet", &ImageSet::ImageSet)
// 				.addFunction("IsDeferred", &ImageSet::IsDeferred)
// 				.addFunction("IsEmpty", &ImageSet::IsEmpty)
// 				.addFunction("IsImage", &ImageSet::IsImage)
// 				.addFunction("Load", &ImageSet::Load)
// 				.addFunction("Name", &ImageSet::Name)
// 				.addFunction("Upload", &ImageSet::Upload)
// 				.addFunction("ValidateFrames", &ImageSet::ValidateFrames)
			.endClass()
			.beginClass<Weather::ImpactInfo>("ImpactInfo")
// 				.addFunction("CalculateStrength", &ImpactInfo::CalculateStrength)
// 				.addFunction("GetInfo", &ImpactInfo::GetInfo)
// 				.addFunction("HasWeapon", &ImpactInfo::HasWeapon)
// 				.addFunction("Period", &ImpactInfo::Period)
// 				.addFunction("ShouldBeRemoved", &ImpactInfo::ShouldBeRemoved)
// 				.addFunction("Step", &ImpactInfo::Step)
// 				.addFunction("Weather", &ImpactInfo::Weather)
// 				.addProperty("position", &ImpactInfo::position)
// 				.addProperty("scale", &ImpactInfo::scale)
			.endClass()
			.beginClass<InfoPanelState>("InfoPanelState")
// 				.addFunction("CanEdit", &InfoPanelState::CanEdit)
// 				.addFunction("Deselect", &InfoPanelState::Deselect)
// 				.addFunction("DeselectAll", &InfoPanelState::DeselectAll)
// 				.addFunction("Disown", &InfoPanelState::Disown)
// 				.addFunction("InfoPanelState", &InfoPanelState::InfoPanelState)
// 				.addFunction("ReorderShipsTo", &InfoPanelState::ReorderShipsTo)
// 				.addFunction("Scroll", &InfoPanelState::Scroll)
// 				.addFunction("Select", &InfoPanelState::Select)
// 				.addFunction("SelectMany", &InfoPanelState::SelectMany)
// 				.addFunction("SelectOnly", &InfoPanelState::SelectOnly)
// 				.addFunction("SelectedIndex", &InfoPanelState::SelectedIndex)
// 				.addFunction("SetCurrentSort", &InfoPanelState::SetCurrentSort)
// 				.addFunction("SetScroll", &InfoPanelState::SetScroll)
// 				.addFunction("SetSelected", &InfoPanelState::SetSelected)
// 				.addFunction("SetSelectedIndex", &InfoPanelState::SetSelectedIndex)
			.endClass()
			.beginClass<Information>("Information")
// 				.addFunction("BarSegments", &Information::BarSegments)
// 				.addFunction("BarValue", &Information::BarValue)
// 				.addFunction("GetSpriteFrame", &Information::GetSpriteFrame)
// 				.addFunction("HasCondition", &Information::HasCondition)
// 				.addFunction("HasCustomRegion", &Information::HasCustomRegion)
// 				.addFunction("SetBar", &Information::SetBar)
// 				.addFunction("SetCondition", &Information::SetCondition)
// 				.addFunction("SetOutlineColor", &Information::SetOutlineColor)
// 				.addFunction("SetRegion", &Information::SetRegion)
// 				.addFunction("SetSprite", &Information::SetSprite)
// 				.addFunction("SetString", &Information::SetString)
			.endClass()
			.beginClass<SpriteShader::Item>("Item")
// 				.addFunction("Add", &Item::Add)
// 				.addFunction("Bind", &Item::Bind)
// 				.addFunction("Init", &Item::Init)
// 				.addFunction("Unbind", &Item::Unbind)
			.endClass()
			.beginClass<ItemInfoDisplay>("ItemInfoDisplay")
// 				.addFunction("AttributesHeight", &ItemInfoDisplay::AttributesHeight)
// 				.addFunction("ClearHover", &ItemInfoDisplay::ClearHover)
// 				.addFunction("DescriptionHeight", &ItemInfoDisplay::DescriptionHeight)
// 				.addFunction("DrawAttributes", &ItemInfoDisplay::DrawAttributes)
// 				.addFunction("DrawDescription", &ItemInfoDisplay::DrawDescription)
// 				.addFunction("DrawTooltips", &ItemInfoDisplay::DrawTooltips)
// 				.addFunction("Hover", &ItemInfoDisplay::Hover)
// 				.addFunction("MaximumHeight", &ItemInfoDisplay::MaximumHeight)
// 				.addFunction("PanelWidth", &ItemInfoDisplay::PanelWidth)
			.endClass()
// 			.beginClass<JumpType>("JumpType")
// 			.endClass()
// 			.beginClass<K>("K")
// 				.addFunction("BeginChild", &K::BeginChild)
// 				.addFunction("DataWriter", &K::DataWriter)
// 				.addFunction("EndChild", &K::EndChild)
// 				.addFunction("SaveToPath", &K::SaveToPath)
// // 				.addFunction("Write", &K::Write)
// // 				.addFunction("Write", &K::Write)
// // 				.addFunction("Write", &K::Write)
// 				.addFunction("WriteComment", &K::WriteComment)
// // 				.addFunction("WriteToken", &K::WriteToken)
// // 				.addFunction("WriteToken", &K::WriteToken)
// // 				.addFunction("WriteToken", &K::WriteToken)
// 			.endClass()
// 			.beginClass<Ship::Leak>("Leak")
// 				.addFunction("Acceleration", &Leak::Acceleration)
// 				.addFunction("AddCrew", &Leak::AddCrew)
// 				.addFunction("AddOutfit", &Leak::AddOutfit)
// 				.addFunction("ApplyForce", &Leak::ApplyForce)
// 				.addFunction("Attraction", &Leak::Attraction)
// 				.addFunction("BaysFree", &Leak::BaysFree)
// 				.addFunction("BaysTotal", &Leak::BaysTotal)
// 				.addFunction("CanBeCarried", &Leak::CanBeCarried)
// 				.addFunction("CanBeFlagship", &Leak::CanBeFlagship)
// 				.addFunction("CanCarry", &Leak::CanCarry)
// 				.addFunction("CanFire", &Leak::CanFire)
// 				.addFunction("CanLand", &Leak::CanLand)
// 				.addFunction("CanPickUp", &Leak::CanPickUp)
// 				.addFunction("CanRefuel", &Leak::CanRefuel)
// 				.addFunction("CanSendHail", &Leak::CanSendHail)
// 				.addFunction("CannotAct", &Leak::CannotAct)
// 				.addFunction("CargoScanFraction", &Leak::CargoScanFraction)
// 				.addFunction("Carry", &Leak::Carry)
// 				.addFunction("ChassisCost", &Leak::ChassisCost)
// 				.addFunction("ClearTargetsAndOrders", &Leak::ClearTargetsAndOrders)
// 				.addFunction("Cloaking", &Leak::Cloaking)
// 				.addFunction("CloakingSpeed", &Leak::CloakingSpeed)
// 				.addFunction("CoolingEfficiency", &Leak::CoolingEfficiency)
// 				.addFunction("Cost", &Leak::Cost)
// 				.addFunction("Crew", &Leak::Crew)
// 				.addFunction("CrewValue", &Leak::CrewValue)
// 				.addFunction("CustomSwizzle", &Leak::CustomSwizzle)
// 				.addFunction("DamageOverlayTimer", &Leak::DamageOverlayTimer)
// 				.addFunction("Destroy", &Leak::Destroy)
// 				.addFunction("Deterrence", &Leak::Deterrence)
// 				.addFunction("Disable", &Leak::Disable)
// 				.addFunction("DisabledHull", &Leak::DisabledHull)
// 				.addFunction("DisruptionLevel", &Leak::DisruptionLevel)
// 				.addFunction("Drag", &Leak::Drag)
// 				.addFunction("DragForce", &Leak::DragForce)
// 				.addFunction("Energy", &Leak::Energy)
// 				.addFunction("ExpendAmmo", &Leak::ExpendAmmo)
// 				.addFunction("FinishLoading", &Leak::FinishLoading)
// 				.addFunction("Fire", &Leak::Fire)
// 				.addFunction("FireAntiMissile", &Leak::FireAntiMissile)
// 				.addFunction("FireTractorBeam", &Leak::FireTractorBeam)
// 				.addFunction("Fuel", &Leak::Fuel)
// 				.addFunction("GetHail", &Leak::GetHail)
// 				.addFunction("GetHyperspacePercentage", &Leak::GetHyperspacePercentage)
// 				.addFunction("GetLingerSteps", &Leak::GetLingerSteps)
// 				.addFunction("HasAntiMissile", &Leak::HasAntiMissile)
// 				.addFunction("HasBays", &Leak::HasBays)
// 				.addFunction("HasDeployOrder", &Leak::HasDeployOrder)
// 				.addFunction("HasTractorBeam", &Leak::HasTractorBeam)
// 				.addFunction("Health", &Leak::Health)
// 				.addFunction("Heat", &Leak::Heat)
// 				.addFunction("HeatDissipation", &Leak::HeatDissipation)
// 				.addFunction("Hull", &Leak::Hull)
// 				.addFunction("HullUntilDisabled", &Leak::HullUntilDisabled)
// 				.addFunction("IdleHeat", &Leak::IdleHeat)
// 				.addFunction("InertialMass", &Leak::InertialMass)
// 				.addFunction("IsBoarding", &Leak::IsBoarding)
// 				.addFunction("IsCapturable", &Leak::IsCapturable)
// 				.addFunction("IsCloaked", &Leak::IsCloaked)
// 				.addFunction("IsDamaged", &Leak::IsDamaged)
// 				.addFunction("IsDestroyed", &Leak::IsDestroyed)
// 				.addFunction("IsDisabled", &Leak::IsDisabled)
// 				.addFunction("IsEnteringHyperspace", &Leak::IsEnteringHyperspace)
// 				.addFunction("IsFleeing", &Leak::IsFleeing)
// 				.addFunction("IsHyperspacing", &Leak::IsHyperspacing)
// 				.addFunction("IsLanding", &Leak::IsLanding)
// 				.addFunction("IsOverheated", &Leak::IsOverheated)
// 				.addFunction("IsParked", &Leak::IsParked)
// 				.addFunction("IsReadyToJump", &Leak::IsReadyToJump)
// // 				.addFunction("IsRestrictedFrom", &Leak::IsRestrictedFrom)
// // 				.addFunction("IsRestrictedFrom", &Leak::IsRestrictedFrom)
// 				.addFunction("IsReversing", &Leak::IsReversing)
// 				.addFunction("IsSpecial", &Leak::IsSpecial)
// 				.addFunction("IsSteering", &Leak::IsSteering)
// 				.addFunction("IsTargetable", &Leak::IsTargetable)
// 				.addFunction("IsThrusting", &Leak::IsThrusting)
// 				.addFunction("IsUsingJumpDrive", &Leak::IsUsingJumpDrive)
// 				.addFunction("IsValid", &Leak::IsValid)
// 				.addFunction("IsYours", &Leak::IsYours)
// // 				.addFunction("Jettison", &Leak::Jettison)
// // 				.addFunction("Jettison", &Leak::Jettison)
// 				.addFunction("JumpFuelMissing", &Leak::JumpFuelMissing)
// 				.addFunction("JumpsRemaining", &Leak::JumpsRemaining)
// 				.addFunction("Launch", &Leak::Launch)
// 				.addFunction("Linger", &Leak::Linger)
// 				.addFunction("Load", &Leak::Load)
// 				.addFunction("Mass", &Leak::Mass)
// 				.addFunction("MaxHull", &Leak::MaxHull)
// 				.addFunction("MaxReverseVelocity", &Leak::MaxReverseVelocity)
// 				.addFunction("MaxShields", &Leak::MaxShields)
// 				.addFunction("MaxVelocity", &Leak::MaxVelocity)
// 				.addFunction("MaximumHeat", &Leak::MaximumHeat)
// 				.addFunction("Move", &Leak::Move)
// 				.addFunction("NeedsFuel", &Leak::NeedsFuel)
// 				.addFunction("OutfitCount", &Leak::OutfitCount)
// 				.addFunction("OutfitScanFraction", &Leak::OutfitScanFraction)
// 				.addFunction("Phases", &Leak::Phases)
// 				.addFunction("Place", &Leak::Place)
// 				.addFunction("PositionFighters", &Leak::PositionFighters)
// 				.addFunction("Recharge", &Leak::Recharge)
// 				.addFunction("RequiredCrew", &Leak::RequiredCrew)
// 				.addFunction("Restore", &Leak::Restore)
// 				.addFunction("ReverseAcceleration", &Leak::ReverseAcceleration)
// 				.addFunction("Save", &Leak::Save)
// 				.addFunction("Scan", &Leak::Scan)
// 				.addFunction("SelfDestruct", &Leak::SelfDestruct)
// // 				.addFunction("SetCommands", &Leak::SetCommands)
// // 				.addFunction("SetCommands", &Leak::SetCommands)
// 				.addFunction("SetDeployOrder", &Leak::SetDeployOrder)
// 				.addFunction("SetFleeing", &Leak::SetFleeing)
// 				.addFunction("SetGovernment", &Leak::SetGovernment)
// 				.addFunction("SetHailPhrase", &Leak::SetHailPhrase)
// 				.addFunction("SetIsParked", &Leak::SetIsParked)
// 				.addFunction("SetIsSpecial", &Leak::SetIsSpecial)
// 				.addFunction("SetIsYours", &Leak::SetIsYours)
// 				.addFunction("SetName", &Leak::SetName)
// 				.addFunction("SetParent", &Leak::SetParent)
// 				.addFunction("SetPersonality", &Leak::SetPersonality)
// 				.addFunction("SetPlanet", &Leak::SetPlanet)
// 				.addFunction("SetPosition", &Leak::SetPosition)
// 				.addFunction("SetShipToAssist", &Leak::SetShipToAssist)
// 				.addFunction("SetSystem", &Leak::SetSystem)
// 				.addFunction("SetTargetAsteroid", &Leak::SetTargetAsteroid)
// 				.addFunction("SetTargetFlotsam", &Leak::SetTargetFlotsam)
// 				.addFunction("SetTargetShip", &Leak::SetTargetShip)
// 				.addFunction("SetTargetStellar", &Leak::SetTargetStellar)
// 				.addFunction("SetTargetSystem", &Leak::SetTargetSystem)
// 				.addFunction("SetTrueModelName", &Leak::SetTrueModelName)
// 				.addFunction("SetUUID", &Leak::SetUUID)
// 				.addFunction("ShieldLevel", &Leak::ShieldLevel)
// 				.addFunction("Shields", &Leak::Shields)
// 				.addFunction("SteeringDirection", &Leak::SteeringDirection)
// 				.addFunction("Strength", &Leak::Strength)
// 				.addFunction("TakeDamage", &Leak::TakeDamage)
// 				.addFunction("TransferFuel", &Leak::TransferFuel)
// 				.addFunction("TurnRate", &Leak::TurnRate)
// 				.addFunction("UnloadBays", &Leak::UnloadBays)
// 				.addFunction("UpdateCaches", &Leak::UpdateCaches)
// 				.addFunction("WasCaptured", &Leak::WasCaptured)
// 				.addProperty("angle", &Leak::angle)
// 				.addProperty("category", &Leak::category)
// // 				.addProperty("facing", &Leak::facing)
// // 				.addProperty("facing", &Leak::facing)
// 				.addProperty("gimbal", &Leak::gimbal)
// 				.addProperty("location", &Leak::location)
// 				.addProperty("point", &Leak::point)
// 				.addProperty("zoom", &Leak::zoom)
// 			.endClass()
// 			.beginClass<Line>("Line")
// 				.addFunction("Add", &Line::Add)
// 				.addFunction("AddPointer", &Line::AddPointer)
// 				.addFunction("AddViewportBoundary", &Line::AddViewportBoundary)
// 				.addFunction("Clear", &Line::Clear)
// 				.addFunction("Draw", &Line::Draw)
// 				.addFunction("SetCenter", &Line::SetCenter)
// 				.addProperty("ANOMALOUS", &Line::ANOMALOUS)
// 				.addProperty("BLINK", &Line::BLINK)
// 				.addProperty("FRIENDLY", &Line::FRIENDLY)
// 				.addProperty("HOSTILE", &Line::HOSTILE)
// 				.addProperty("INACTIVE", &Line::INACTIVE)
// 				.addProperty("PLAYER", &Line::PLAYER)
// 				.addProperty("SPECIAL", &Line::SPECIAL)
// 				.addProperty("STAR", &Line::STAR)
// 				.addProperty("UNFRIENDLY", &Line::UNFRIENDLY)
// 				.addProperty("VIEWPORT", &Line::VIEWPORT)
// 				.addProperty("base", &Line::base)
// // 				.addProperty("color", &Line::color)
// // 				.addProperty("color", &Line::color)
// // 				.addProperty("color", &Line::color)
// 				.addProperty("inner", &Line::inner)
// 				.addProperty("outer", &Line::outer)
// 				.addProperty("position", &Line::position)
// 				.addProperty("unit", &Line::unit)
// 				.addProperty("vector", &Line::vector)
// 			.endClass()
// 			.beginClass<LineElement>("LineElement")
// // 				.addFunction("Bounds", &LineElement::Bounds)
// // 				.addFunction("Bounds", &LineElement::Bounds)
// // 				.addFunction("Draw", &LineElement::Draw)
// // 				.addFunction("Draw", &LineElement::Draw)
// // 				.addFunction("Get", &LineElement::Get)
// // 				.addFunction("Get", &LineElement::Get)
// 				.addFunction("GetBox", &LineElement::GetBox)
// 				.addFunction("GetPoint", &LineElement::GetPoint)
// 				.addFunction("GetValue", &LineElement::GetValue)
// 				.addFunction("HasPoint", &LineElement::HasPoint)
// // 				.addFunction("Load", &LineElement::Load)
// // 				.addFunction("Load", &LineElement::Load)
// 				.addFunction("Set", &LineElement::Set)
// 				.addFunction("SetConditions", &LineElement::SetConditions)
// 			.endClass()
// 			.beginClass<LineShader>("LineShader")
// 				.addFunction("Draw", &LineShader::Draw)
// 				.addFunction("Init", &LineShader::Init)
// 			.endClass()
// 			.beginClass<Link>("Link")
// 				.addFunction("Draw", &Link::Draw)
// 				.addFunction("DrawMiniMap", &Link::DrawMiniMap)
// 				.addFunction("FinishDrawing", &Link::FinishDrawing)
// 				.addFunction("MapPanel", &Link::MapPanel)
// 				.addFunction("Step", &Link::Step)
// 				.addProperty("INNER", &Link::INNER)
// 				.addProperty("LINK_OFFSET", &Link::LINK_OFFSET)
// 				.addProperty("LINK_WIDTH", &Link::LINK_WIDTH)
// 				.addProperty("OUTER", &Link::OUTER)
// // 				.addProperty("color", &Link::color)
// // 				.addProperty("color", &Link::color)
// 				.addProperty("end", &Link::end)
// 				.addProperty("name", &Link::name)
// 				.addProperty("nameColor", &Link::nameColor)
// 				.addProperty("position", &Link::position)
// 				.addProperty("start", &Link::start)
// 			.endClass()
			.beginClass<LoadPanel>("LoadPanel")
// 				.addFunction("Draw", &LoadPanel::Draw)
			.endClass()
			.beginClass<LocationFilter>("LocationFilter")
// 				.addFunction("IsEmpty", &LocationFilter::IsEmpty)
// 				.addFunction("IsValid", &LocationFilter::IsValid)
// 				.addFunction("Load", &LocationFilter::Load)
// 				.addFunction("LocationFilter", &LocationFilter::LocationFilter)
// // 				.addFunction("Matches", &LocationFilter::Matches)
// // 				.addFunction("Matches", &LocationFilter::Matches)
// // 				.addFunction("Matches", &LocationFilter::Matches)
// 				.addFunction("Save", &LocationFilter::Save)
// 				.addFunction("SetOrigin", &LocationFilter::SetOrigin)
			.endClass()
			.beginClass<LogbookPanel>("LogbookPanel")
				.addFunction("Draw", &LogbookPanel::Draw)
			.endClass()
			.beginClass<Logger>("Logger")
// 				.addFunction("LogError", &Logger::LogError)
// 				.addFunction("SetLogErrorCallback", &Logger::SetLogErrorCallback)
			.endClass()
			.beginClass<MainPanel>("MainPanel")
// 				.addFunction("Draw", &MainPanel::Draw)
// 				.addFunction("MainPanel", &MainPanel::MainPanel)
// 				.addFunction("OnBribeCallback", &MainPanel::OnBribeCallback)
// 				.addFunction("OnCallback", &MainPanel::OnCallback)
// 				.addFunction("Step", &MainPanel::Step)
			.endClass()
			.beginClass<MapDetailPanel>("MapDetailPanel")
// 				.addFunction("Draw", &MapDetailPanel::Draw)
// 				.addFunction("GetScroll", &MapDetailPanel::GetScroll)
// // 				.addFunction("MapDetailPanel", &MapDetailPanel::MapDetailPanel)
// // 				.addFunction("MapDetailPanel", &MapDetailPanel::MapDetailPanel)
// 				.addFunction("PlanetPanelHeight", &MapDetailPanel::PlanetPanelHeight)
// 				.addFunction("Step", &MapDetailPanel::Step)
			.endClass()
			.beginClass<MapOutfitterPanel>("MapOutfitterPanel")
// // 				.addFunction("MapOutfitterPanel", &MapOutfitterPanel::MapOutfitterPanel)
// // 				.addFunction("MapOutfitterPanel", &MapOutfitterPanel::MapOutfitterPanel)
			.endClass()
			.beginClass<MapSalesPanel>("MapSalesPanel")
// 				.addFunction("Draw", &MapSalesPanel::Draw)
			.endClass()
			.beginClass<MapShipyardPanel>("MapShipyardPanel")
// // 				.addFunction("MapShipyardPanel", &MapShipyardPanel::MapShipyardPanel)
// // 				.addFunction("MapShipyardPanel", &MapShipyardPanel::MapShipyardPanel)
			.endClass()
			.beginClass<Mask>("Mask")
// 				.addFunction("Collide", &Mask::Collide)
// 				.addFunction("Contains", &Mask::Contains)
// 				.addFunction("Create", &Mask::Create)
// 				.addFunction("IsLoaded", &Mask::IsLoaded)
// 				.addFunction("Radius", &Mask::Radius)
// 				.addFunction("Range", &Mask::Range)
// 				.addFunction("WithinRing", &Mask::WithinRing)
			.endClass()
			.beginClass<MaskManager>("MaskManager")
// 				.addFunction("RegisterScale", &MaskManager::RegisterScale)
// 				.addFunction("ScaleMasks", &MaskManager::ScaleMasks)
// 				.addFunction("SetMasks", &MaskManager::SetMasks)
			.endClass()
			.beginClass<MenuAnimationPanel>("MenuAnimationPanel")
// 				.addFunction("Draw", &MenuAnimationPanel::Draw)
// 				.addFunction("Step", &MenuAnimationPanel::Step)
			.endClass()
			.beginClass<MenuPanel>("MenuPanel")
// 				.addFunction("Draw", &MenuPanel::Draw)
// 				.addFunction("Step", &MenuPanel::Step)
			.endClass()
			.beginClass<MessageLogPanel>("MessageLogPanel")
// 				.addFunction("Draw", &MessageLogPanel::Draw)
			.endClass()
			.beginClass<Mission>("Mission")
				.addFunction("BlockedMessage", &Mission::BlockedMessage)
				.addFunction("CalculateJumps", &Mission::CalculateJumps)
				.addFunction("CanAccept", &Mission::CanAccept)
				.addFunction("CanComplete", &Mission::CanComplete)
				.addFunction("CanOffer", &Mission::CanOffer)
				.addFunction("Cargo", &Mission::Cargo)
				.addFunction("CargoSize", &Mission::CargoSize)
				.addFunction("CheckDeadline", &Mission::CheckDeadline)
				.addFunction("ClearanceMessage", &Mission::ClearanceMessage)
				.addFunction("Deadline", &Mission::Deadline)
				.addFunction("Description", &Mission::Description)
				.addFunction("Destination", &Mission::Destination)
				.addFunction("DisplayedPayment", &Mission::DisplayedPayment)
// 				.addFunction("Do", &Mission::Do)
// 				.addFunction("Do", &Mission::Do)
// 				.addFunction("ExpectedJumps", &Mission::ExpectedJumps)
				.addFunction("Fail", &Mission::Fail)
				.addFunction("FailIfDiscovered", &Mission::FailIfDiscovered)
				.addFunction("Fine", &Mission::Fine)
				.addFunction("FineMessage", &Mission::FineMessage)
				.addFunction("GetAction", &Mission::GetAction)
				.addFunction("HasClearance", &Mission::HasClearance)
				.addFunction("HasFullClearance", &Mission::HasFullClearance)
				.addFunction("HasPriority", &Mission::HasPriority)
				.addFunction("HasShip", &Mission::HasShip)
// 				.addFunction("HasSpace", &Mission::HasSpace)
// 				.addFunction("HasSpace", &Mission::HasSpace)
				.addFunction("Identifier", &Mission::Identifier)
				.addFunction("Instantiate", &Mission::Instantiate)
				.addFunction("IsAtLocation", &Mission::IsAtLocation)
				.addFunction("IsFailed", &Mission::IsFailed)
				.addFunction("IsMinor", &Mission::IsMinor)
				.addFunction("IsSatisfied", &Mission::IsSatisfied)
				.addFunction("IsUnique", &Mission::IsUnique)
				.addFunction("IsValid", &Mission::IsValid)
				.addFunction("IsVisible", &Mission::IsVisible)
				.addFunction("Load", &Mission::Load)
				.addFunction("Mark", &Mission::Mark)
				.addFunction("MarkedSystems", &Mission::MarkedSystems)
// 				.addFunction("Mission", &Mission::Mission)
				.addFunction("Name", &Mission::Name)
				.addFunction("NeverOffer", &Mission::NeverOffer)
				.addFunction("NPCs", &Mission::NPCs)
				.addFunction("OverridesCapture", &Mission::OverridesCapture)
				.addFunction("Passengers", &Mission::Passengers)
				.addFunction("RecommendsAutosave", &Mission::RecommendsAutosave)
				.addFunction("RequiresGiftedShip", &Mission::RequiresGiftedShip)
				.addFunction("Save", &Mission::Save)
				.addFunction("SourceShip", &Mission::SourceShip)
				.addFunction("Stopovers", &Mission::Stopovers)
				.addFunction("Unmark", &Mission::Unmark)
				.addFunction("UnmarkedSystems", &Mission::UnmarkedSystems)
				.addFunction("UpdateNPCs", &Mission::UpdateNPCs)
				.addFunction("UUID", &Mission::UUID)
				.addFunction("VisitedStopovers", &Mission::VisitedStopovers)
				.addFunction("VisitedWaypoints", &Mission::VisitedWaypoints)
				.addFunction("Waypoints", &Mission::Waypoints)
			.endClass()
			.beginClass<MissionAction>("MissionAction")
				.addFunction("CanBeDone", &MissionAction::CanBeDone)
				.addFunction("Load", &MissionAction::Load)
				.addFunction("LoadSingle", &MissionAction::LoadSingle)
				.addFunction("RequiresGiftedShip", &MissionAction::RequiresGiftedShip)
				.addFunction("Save", &MissionAction::Save)
				.addFunction("SaveBody", &MissionAction::SaveBody)
				.addFunction("Validate", &MissionAction::Validate)
			.endClass()
			.beginClass<MissionPanel>("MissionPanel")
				.addFunction("Draw", &MissionPanel::Draw)
// 				.addFunction("MissionPanel", &MissionPanel::MissionPanel)
// 				.addFunction("MissionPanel", &MissionPanel::MissionPanel)
				.addFunction("Step", &MissionPanel::Step)
			.endClass()
			.beginClass<Music>("Music")
// 				.addFunction("Init", &Music::Init)
				.addFunction("SetSource", &Music::SetSource)
			.endClass()
			.beginClass<NPCAction>("NPCAction")
				.addFunction("Do", &NPCAction::Do)
				.addFunction("Load", &NPCAction::Load)
// 				.addFunction("NPCAction", &NPCAction::NPCAction)
				.addFunction("Save", &NPCAction::Save)
				.addFunction("Validate", &NPCAction::Validate)
			.endClass()
			.beginClass<News>("News")
				.addFunction("IsEmpty", &News::IsEmpty)
				.addFunction("Load", &News::Load)
				.addFunction("Matches", &News::Matches)
				.addFunction("Message", &News::Message)
				.addFunction("Name", &News::Name)
			.endClass()
// 			.beginClass<Node>("Node")
// 				.addFunction("Choices", &Node::Choices)
// 				.addFunction("ElementIsValid", &Node::ElementIsValid)
// 				.addFunction("HasAnyChoices", &Node::HasAnyChoices)
// 				.addFunction("Instantiate", &Node::Instantiate)
// 				.addFunction("IsAction", &Node::IsAction)
// 				.addFunction("IsBranch", &Node::IsBranch)
// 				.addFunction("IsChoice", &Node::IsChoice)
// 				.addFunction("Load", &Node::Load)
// 				.addFunction("NextNodeForChoice", &Node::NextNodeForChoice)
// 				.addFunction("NodeIsValid", &Node::NodeIsValid)
// 				.addFunction("RequiresLaunch", &Node::RequiresLaunch)
// 				.addFunction("Save", &Node::Save)
// 				.addFunction("ShouldDisplayNode", &Node::ShouldDisplayNode)
// 				.addFunction("StepToNextNode", &Node::StepToNextNode)
// 				.addFunction("Validate", &Node::Validate)
// 				.addProperty("actions", &Node::actions)
// 				.addProperty("canMergeOnto", &Node::canMergeOnto)
// // 				.addProperty("conditions", &Node::conditions)
// // 				.addProperty("conditions", &Node::conditions)
// 				.addProperty("isChoice", &Node::isChoice)
// 				.addProperty("next", &Node::next)
// 				.addProperty("text", &Node::text)
// 			.endClass()
// 			.beginClass<OpenGL>("OpenGL")
// 				.addFunction("HasAdaptiveVSyncSupport", &OpenGL::HasAdaptiveVSyncSupport)
// 			.endClass()
// 			.beginClass<Operation>("Operation")
// // 				.addFunction("Add", &Operation::Add)
// // 				.addFunction("Add", &Operation::Add)
// // 				.addFunction("Add", &Operation::Add)
// // 				.addFunction("Add", &Operation::Add)
// // 				.addFunction("Apply", &Operation::Apply)
// // 				.addFunction("Apply", &Operation::Apply)
// // 				.addFunction("ConditionSet", &Operation::ConditionSet)
// // 				.addFunction("Evaluate", &Operation::Evaluate)
// // 				.addFunction("IsEmpty", &Operation::IsEmpty)
// // 				.addFunction("IsEmpty", &Operation::IsEmpty)
// // 				.addFunction("IsEmpty", &Operation::IsEmpty)
// // 				.addFunction("IsTestable", &Operation::IsTestable)
// // 				.addFunction("Load", &Operation::Load)
// // 				.addFunction("Name", &Operation::Name)
// // 				.addFunction("Operation", &Operation::Operation)
// // 				.addFunction("Save", &Operation::Save)
// // 				.addFunction("Save", &Operation::Save)
// // 				.addFunction("SubExpression", &Operation::SubExpression)
// // 				.addFunction("SubExpression", &Operation::SubExpression)
// // 				.addFunction("Test", &Operation::Test)
// // 				.addFunction("Test", &Operation::Test)
// // 				.addFunction("TestApply", &Operation::TestApply)
// // 				.addFunction("ToString", &Operation::ToString)
// // 				.addFunction("ToString", &Operation::ToString)
// // 				.addProperty("a", &Operation::a)
// // 				.addProperty("b", &Operation::b)
// 			.endClass()
// 			.beginClass<AI::Orders>("Orders")
// 				.addFunction("AllyStrength", &Orders::AllyStrength)
// 				.addFunction("Clean", &Orders::Clean)
// 				.addFunction("ClearOrders", &Orders::ClearOrders)
// 				.addFunction("EnemyStrength", &Orders::EnemyStrength)
// 				.addFunction("IssueAsteroidTarget", &Orders::IssueAsteroidTarget)
// 				.addFunction("IssueMoveTarget", &Orders::IssueMoveTarget)
// 				.addFunction("IssueShipTarget", &Orders::IssueShipTarget)
// 				.addFunction("SetMousePosition", &Orders::SetMousePosition)
// 				.addFunction("Step", &Orders::Step)
// 				.addFunction("UpdateEvents", &Orders::UpdateEvents)
// 				.addFunction("UpdateKeys", &Orders::UpdateKeys)
// 				.addProperty("point", &Orders::point)
// 			.endClass()
			.beginClass<Outfit>("Outfit")
				.addFunction("Add", &Outfit::Add)
				.addFunction("AddLicenses", &Outfit::AddLicenses)
				.addFunction("CanAdd", &Outfit::CanAdd)
				.addFunction("Cost", &Outfit::Cost)
// 				.addFunction("Get", &Outfit::Get)
// 				.addFunction("Get", &Outfit::Get)
// 				.addFunction("Index", &Outfit::Index)
				.addFunction("IsDefined", &Outfit::IsDefined)
				.addFunction("Load", &Outfit::Load)
				.addFunction("Mass", &Outfit::Mass)
				.addFunction("Set", &Outfit::Set)
				.addFunction("SetName", &Outfit::SetName)
			.endClass()
			.beginClass<OutfitInfoDisplay>("OutfitInfoDisplay")
// 				.addFunction("DrawRequirements", &OutfitInfoDisplay::DrawRequirements)
// 				.addFunction("RequirementsHeight", &OutfitInfoDisplay::RequirementsHeight)
// 				.addFunction("Update", &OutfitInfoDisplay::Update)
			.endClass()
			.beginClass<OutfitterPanel>("OutfitterPanel")
// 				.addFunction("OutfitterPanel", &OutfitterPanel::OutfitterPanel)
// 				.addFunction("Step", &OutfitterPanel::Step)
			.endClass()
			.beginClass<OutlineShader>("OutlineShader")
// 				.addFunction("Init", &OutlineShader::Init)
			.endClass()
			.beginClass<Minable::Payload>("Payload")
// 				.addFunction("FinishLoading", &Payload::FinishLoading)
// 				.addFunction("Hull", &Payload::Hull)
// 				.addFunction("Load", &Payload::Load)
// 				.addFunction("Move", &Payload::Move)
// 				.addFunction("Place", &Payload::Place)
// 				.addFunction("TakeDamage", &Payload::TakeDamage)
			.endClass()
			.beginClass<Person>("Person")
				.addFunction("ClearPlacement", &Person::ClearPlacement)
				.addFunction("Destroy", &Person::Destroy)
				.addFunction("FinishLoading", &Person::FinishLoading)
				.addFunction("Frequency", &Person::Frequency)
				.addFunction("IsDestroyed", &Person::IsDestroyed)
				.addFunction("IsPlaced", &Person::IsPlaced)
				.addFunction("Load", &Person::Load)
				.addFunction("NeverSpawn", &Person::NeverSpawn)
				.addFunction("Restore", &Person::Restore)
			.endClass()
			.beginClass<Personality>("Personality")
// 				.addFunction("Defender", &Personality::Defender)
// 				.addFunction("DefenderFighter", &Personality::DefenderFighter)
// 				.addFunction("Disables", &Personality::Disables)
// 				.addFunction("Harvests", &Personality::Harvests)
// 				.addFunction("IsAppeasing", &Personality::IsAppeasing)
// 				.addFunction("IsCoward", &Personality::IsCoward)
// 				.addFunction("IsDaring", &Personality::IsDaring)
// 				.addFunction("IsDecloaked", &Personality::IsDecloaked)
// 				.addFunction("IsDefined", &Personality::IsDefined)
// 				.addFunction("IsDerelict", &Personality::IsDerelict)
// 				.addFunction("IsEntering", &Personality::IsEntering)
// 				.addFunction("IsEscort", &Personality::IsEscort)
// 				.addFunction("IsFleeing", &Personality::IsFleeing)
// 				.addFunction("IsForbearing", &Personality::IsForbearing)
// 				.addFunction("IsFrugal", &Personality::IsFrugal)
// 				.addFunction("IsHunting", &Personality::IsHunting)
// 				.addFunction("IsLaunching", &Personality::IsLaunching)
// 				.addFunction("IsLingering", &Personality::IsLingering)
// 				.addFunction("IsMarked", &Personality::IsMarked)
// 				.addFunction("IsMerciful", &Personality::IsMerciful)
// 				.addFunction("IsMining", &Personality::IsMining)
// 				.addFunction("IsMute", &Personality::IsMute)
// 				.addFunction("IsNemesis", &Personality::IsNemesis)
// 				.addFunction("IsOpportunistic", &Personality::IsOpportunistic)
// 				.addFunction("IsPacifist", &Personality::IsPacifist)
// 				.addFunction("IsQuiet", &Personality::IsQuiet)
// 				.addFunction("IsRamming", &Personality::IsRamming)
// 				.addFunction("IsRestricted", &Personality::IsRestricted)
// 				.addFunction("IsSecretive", &Personality::IsSecretive)
// 				.addFunction("IsStaying", &Personality::IsStaying)
// 				.addFunction("IsSurveillance", &Personality::IsSurveillance)
// 				.addFunction("IsSwarming", &Personality::IsSwarming)
// 				.addFunction("IsTarget", &Personality::IsTarget)
// 				.addFunction("IsTimid", &Personality::IsTimid)
// 				.addFunction("IsUnconstrained", &Personality::IsUnconstrained)
// 				.addFunction("IsUninterested", &Personality::IsUninterested)
// 				.addFunction("IsUnrestricted", &Personality::IsUnrestricted)
// 				.addFunction("IsVindictive", &Personality::IsVindictive)
// 				.addFunction("IsWaiting", &Personality::IsWaiting)
// 				.addFunction("Load", &Personality::Load)
// 				.addFunction("Plunders", &Personality::Plunders)
// 				.addFunction("Save", &Personality::Save)
// 				.addFunction("UpdateConfusion", &Personality::UpdateConfusion)
			.endClass()
			.beginClass<Planet>("Planet")
				.addFunction("Attributes", &Planet::Attributes)
				.addFunction("Bribe", &Planet::Bribe)
// 				.addFunction("CanLand", &Planet::CanLand)
				.addFunction("CanUseServices", &Planet::CanUseServices)
				.addFunction("DemandTribute", &Planet::DemandTribute)
				.addFunction("DeployDefense", &Planet::DeployDefense)
				.addFunction("Description", &Planet::Description)
				.addFunction("FinishLoading", &Planet::FinishLoading)
				.addFunction("GetBribeFraction", &Planet::GetBribeFraction)
				.addFunction("GetFriendliness", &Planet::GetFriendliness)
				.addFunction("GetGovernment", &Planet::GetGovernment)
				.addFunction("GetPort", &Planet::GetPort)
				.addFunction("GetSystem", &Planet::GetSystem)
				.addFunction("GetWormhole", &Planet::GetWormhole)
				.addFunction("HasCustomSecurity", &Planet::HasCustomSecurity)
				.addFunction("HasFuelFor", &Planet::HasFuelFor)
				.addFunction("HasNamedPort", &Planet::HasNamedPort)
				.addFunction("HasOutfitter", &Planet::HasOutfitter)
				.addFunction("HasServices", &Planet::HasServices)
				.addFunction("HasShipyard", &Planet::HasShipyard)
				.addFunction("IsAccessible", &Planet::IsAccessible)
				.addFunction("IsDefending", &Planet::IsDefending)
				.addFunction("IsInhabited", &Planet::IsInhabited)
				.addFunction("IsInSystem", &Planet::IsInSystem)
				.addFunction("IsUnrestricted", &Planet::IsUnrestricted)
				.addFunction("IsValid", &Planet::IsValid)
				.addFunction("IsWormhole", &Planet::IsWormhole)
				.addFunction("Landscape", &Planet::Landscape)
				.addFunction("Load", &Planet::Load)
				.addFunction("MusicName", &Planet::MusicName)
				.addFunction("Name", &Planet::Name)
				.addFunction("Noun", &Planet::Noun)
				.addFunction("Outfitter", &Planet::Outfitter)
				.addFunction("RemoveSystem", &Planet::RemoveSystem)
				.addFunction("RequiredReputation", &Planet::RequiredReputation)
				.addFunction("ResetDefense", &Planet::ResetDefense)
				.addFunction("Security", &Planet::Security)
				.addFunction("SetName", &Planet::SetName)
				.addFunction("SetSystem", &Planet::SetSystem)
				.addFunction("Shipyard", &Planet::Shipyard)
				.addFunction("Systems", &Planet::Systems)
				.addFunction("TrueName", &Planet::TrueName)
			.endClass()
			.beginClass<PlanetLabel>("PlanetLabel")
// 				.addFunction("Draw", &PlanetLabel::Draw)
// 				.addFunction("Update", &PlanetLabel::Update)
			.endClass()
			.beginClass<PlanetPanel>("PlanetPanel")
// 				.addFunction("Draw", &PlanetPanel::Draw)
// 				.addFunction("Step", &PlanetPanel::Step)
			.endClass()
			.beginClass<PlayerInfo>("PlayerInfo")
				.addFunction("AcceptJob", &PlayerInfo::AcceptJob)
				.addFunction("Accounts", [](PlayerInfo& self) -> Account& {
					return self.Accounts();
				})
				.addFunction("ActiveBoardingMission", &PlayerInfo::ActiveBoardingMission)
				.addFunction("AddChanges", &PlayerInfo::AddChanges)
				.addFunction("AddEvent", &PlayerInfo::AddEvent)
				.addFunction("AddLicense", &PlayerInfo::AddLicense)
				.addFunction("AddLogEntry", &PlayerInfo::AddLogEntry)
				.addFunction("AddPlayTime", &PlayerInfo::AddPlayTime)
				.addFunction("AddShip", &PlayerInfo::AddShip)
				.addFunction("AddSpecialLog", &PlayerInfo::AddSpecialLog)
				.addFunction("AddStock", &PlayerInfo::AddStock)
				.addFunction("AdjustBasis", &PlayerInfo::AdjustBasis)
				.addFunction("AvailableJobs", &PlayerInfo::AvailableJobs)
				.addFunction("BasicCallback", &PlayerInfo::BasicCallback)
				.addFunction("BuyShip", &PlayerInfo::BuyShip)
				.addFunction("CanView", &PlayerInfo::CanView)
				.addFunction("CaptureOverriden", &PlayerInfo::CaptureOverriden)
				.addFunction("Clear", &PlayerInfo::Clear)
				.addFunction("ClearActiveBoardingMission", &PlayerInfo::ClearActiveBoardingMission)
				.addFunction("DeselectAllSecondaries", &PlayerInfo::DeselectAllSecondaries)
				.addFunction("Die", &PlayerInfo::Die)
				.addFunction("DisownShip", &PlayerInfo::DisownShip)
				.addFunction("DisplayCarrierHelp", &PlayerInfo::DisplayCarrierHelp)
				.addFunction("DistributeCargo", &PlayerInfo::DistributeCargo)
				.addFunction("FailMission", &PlayerInfo::FailMission)
				.addFunction("FinishTransaction", &PlayerInfo::FinishTransaction)
				.addFunction("FirstName", &PlayerInfo::FirstName)
				.addFunction("FleetDepreciation", &PlayerInfo::FleetDepreciation)
				.addFunction("FlightCheck", &PlayerInfo::FlightCheck)
// 				.addFunction("GetAvailableSortType", &PlayerInfo::GetAvailableSortType)
				.addFunction("GetBasis", &PlayerInfo::GetBasis)
				.addFunction("GetDate", &PlayerInfo::GetDate)
				.addFunction("GetEscortDestination", &PlayerInfo::GetEscortDestination)
				.addFunction("GetPlanet", &PlayerInfo::GetPlanet)
				.addFunction("GetPlayTime", &PlayerInfo::GetPlayTime)
				.addFunction("GetPreviousSystem", &PlayerInfo::GetPreviousSystem)
				.addFunction("GetStellarObject", &PlayerInfo::GetStellarObject)
				.addFunction("GetStock", &PlayerInfo::GetStock)
				.addFunction("GetSubstitutions", &PlayerInfo::GetSubstitutions)
				.addFunction("GetSystemEntry", &PlayerInfo::GetSystemEntry)
				.addFunction("GetSystem", &PlayerInfo::GetSystem)
				.addFunction("GetTribute", &PlayerInfo::GetTribute)
				.addFunction("GetTributeTotal", &PlayerInfo::GetTributeTotal)
				.addFunction("GiftedShips", &PlayerInfo::GiftedShips)
				.addFunction("GiftShip", &PlayerInfo::GiftShip)
				.addFunction("HandleBlockedMissions", &PlayerInfo::HandleBlockedMissions)
				.addFunction("HandleEvent", &PlayerInfo::HandleEvent)
				.addFunction("Harvest", &PlayerInfo::Harvest)
				.addFunction("Harvested", &PlayerInfo::Harvested)
				.addFunction("HasEscortDestination", &PlayerInfo::HasEscortDestination)
				.addFunction("HasLicense", &PlayerInfo::HasLicense)
				.addFunction("HasLogs", &PlayerInfo::HasLogs)
				.addFunction("HasMapped", &PlayerInfo::HasMapped)
				.addFunction("HasSeen", &PlayerInfo::HasSeen)
				.addFunction("HasTravelPlan", &PlayerInfo::HasTravelPlan)
// 				.addFunction("HasVisited", &PlayerInfo::HasVisited)
// 				.addFunction("HasVisited", &PlayerInfo::HasVisited)
				.addFunction("Identifier", &PlayerInfo::Identifier)
				.addFunction("IncrementDate", &PlayerInfo::IncrementDate)
				.addFunction("IsDead", &PlayerInfo::IsDead)
				.addFunction("IsLoaded", &PlayerInfo::IsLoaded)
				.addFunction("KnowsName", &PlayerInfo::KnowsName)
				.addFunction("Land", &PlayerInfo::Land)
				.addFunction("LastName", &PlayerInfo::LastName)
				.addFunction("Licenses", &PlayerInfo::Licenses)
				.addFunction("Load", &PlayerInfo::Load)
				.addFunction("LoadRecent", &PlayerInfo::LoadRecent)
				.addFunction("Logbook", &PlayerInfo::Logbook)
				.addFunction("MaintenanceAndReturns", &PlayerInfo::MaintenanceAndReturns)
				.addFunction("Map", &PlayerInfo::Map)
				.addFunction("MapColoring", &PlayerInfo::MapColoring)
				.addFunction("MapZoom", &PlayerInfo::MapZoom)
				.addFunction("MissionCallback", &PlayerInfo::MissionCallback)
				.addFunction("Missions", &PlayerInfo::Missions)
				.addFunction("MissionToOffer", &PlayerInfo::MissionToOffer)
				.addFunction("New", &PlayerInfo::New)
				.addFunction("NextAvailableSortType", &PlayerInfo::NextAvailableSortType)
				.addFunction("ParkShip", &PlayerInfo::ParkShip)
				.addFunction("PlanetaryStorage", &PlayerInfo::PlanetaryStorage)
				.addFunction("PoolCargo", &PlayerInfo::PoolCargo)
				.addFunction("PopTravel", &PlayerInfo::PopTravel)
				.addFunction("RaidFleetAttraction", &PlayerInfo::RaidFleetAttraction)
				.addFunction("RemoveLicense", &PlayerInfo::RemoveLicense)
				.addFunction("RemoveMission", &PlayerInfo::RemoveMission)
				.addFunction("RenameShip", &PlayerInfo::RenameShip)
				.addFunction("ReorderShip", &PlayerInfo::ReorderShip)
				.addFunction("Salaries", &PlayerInfo::Salaries)
// 				.addFunction("Save", &PlayerInfo::Save)
				.addFunction("SelectedSecondaryWeapons", &PlayerInfo::SelectedSecondaryWeapons)
				.addFunction("SelectedShips", &PlayerInfo::SelectedShips)
				.addFunction("SelectGroup", &PlayerInfo::SelectGroup)
				.addFunction("SelectNextSecondary", &PlayerInfo::SelectNextSecondary)
// 				.addFunction("SelectShip", &PlayerInfo::SelectShip)
// 				.addFunction("SelectShips", &PlayerInfo::SelectShips)
// 				.addFunction("SelectShips", &PlayerInfo::SelectShips)
				.addFunction("SellShip", &PlayerInfo::SellShip)
				.addFunction("SetEscortDestination", &PlayerInfo::SetEscortDestination)
				.addFunction("SetGroup", &PlayerInfo::SetGroup)
				.addFunction("SetMapColoring", &PlayerInfo::SetMapColoring)
				.addFunction("SetMapZoom", &PlayerInfo::SetMapZoom)
				.addFunction("SetName", &PlayerInfo::SetName)
				.addFunction("SetPlanet", &PlayerInfo::SetPlanet)
				.addFunction("SetShipOrder", &PlayerInfo::SetShipOrder)
				.addFunction("SetSystem", &PlayerInfo::SetSystem)
				.addFunction("SetSystemEntry", &PlayerInfo::SetSystemEntry)
				.addFunction("SetTravelDestination", &PlayerInfo::SetTravelDestination)
// 				.addFunction("SetTribute", &PlayerInfo::SetTribute)
// 				.addFunction("SetTribute", &PlayerInfo::SetTribute)
				.addFunction("ShouldLaunch", &PlayerInfo::ShouldLaunch)
// 				.addFunction("ShouldSortAscending", &PlayerInfo::ShouldSortAscending)
// 				.addFunction("ShouldSortSeparateDeadline", &PlayerInfo::ShouldSortSeparateDeadline)
// 				.addFunction("ShouldSortSeparatePossible", &PlayerInfo::ShouldSortSeparatePossible)
				.addFunction("SortAvailable", &PlayerInfo::SortAvailable)
				.addFunction("SpecialLogs", &PlayerInfo::SpecialLogs)
				.addFunction("StartData", &PlayerInfo::StartData)
				.addFunction("StartTransaction", &PlayerInfo::StartTransaction)
				.addFunction("Stock", &PlayerInfo::Stock)
				.addFunction("StockDepreciation", &PlayerInfo::StockDepreciation)
				.addFunction("Storage", &PlayerInfo::Storage)
				.addFunction("TakeOff", &PlayerInfo::TakeOff)
				.addFunction("TakeShip", &PlayerInfo::TakeShip)
				.addFunction("ToggleAnySecondary", &PlayerInfo::ToggleAnySecondary)
				.addFunction("ToggleSortAscending", &PlayerInfo::ToggleSortAscending)
				.addFunction("ToggleSortSeparateDeadline", &PlayerInfo::ToggleSortSeparateDeadline)
				.addFunction("ToggleSortSeparatePossible", &PlayerInfo::ToggleSortSeparatePossible)
				.addFunction("TravelDestination", &PlayerInfo::TravelDestination)
// 				.addFunction("Unvisit", &PlayerInfo::Unvisit)
// 				.addFunction("Unvisit", &PlayerInfo::Unvisit)
				.addFunction("UpdateCargoCapacities", &PlayerInfo::UpdateCargoCapacities)
				.addFunction("UpdateMissionNPCs", &PlayerInfo::UpdateMissionNPCs)
// 				.addFunction("Visit", &PlayerInfo::Visit)
// 				.addFunction("Visit", &PlayerInfo::Visit)
			.endClass()
			.beginClass<Plugins>("Plugins")
// 				.addFunction("HasChanged", &Plugins::HasChanged)
// 				.addFunction("IsPlugin", &Plugins::IsPlugin)
// 				.addFunction("LoadSettings", &Plugins::LoadSettings)
// 				.addFunction("Save", &Plugins::Save)
// 				.addFunction("TogglePlugin", &Plugins::TogglePlugin)
			.endClass()
// 			.beginClass<BoardingPanel::Plunder>("Plunder")
// 				.addFunction("CanTake", &Plunder::CanTake)
// 				.addFunction("Count", &Plunder::Count)
// 				.addFunction("Draw", &Plunder::Draw)
// 				.addFunction("Take", &Plunder::Take)
// 				.addFunction("UnitValue", &Plunder::UnitValue)
// 			.endClass()
			.beginClass<Point>("Point")
// 				.addFunction("Cross", &Point::Cross)
// 				.addFunction("Distance", &Point::Distance)
// 				.addFunction("DistanceSquared", &Point::DistanceSquared)
// 				.addFunction("Dot", &Point::Dot)
// 				.addFunction("Length", &Point::Length)
// 				.addFunction("LengthSquared", &Point::LengthSquared)
// 				.addFunction("Lerp", &Point::Lerp)
// 				.addFunction("Set", &Point::Set)
// 				.addFunction("Unit", &Point::Unit)
// 				.addFunction("abs", &Point::abs)
// 				.addFunction("max", &Point::max)
// 				.addFunction("min", &Point::min)
			.endClass()
			.beginClass<PointerShader>("PointerShader")
// 				.addFunction("Add", &PointerShader::Add)
// 				.addFunction("Bind", &PointerShader::Bind)
// 				.addFunction("Draw", &PointerShader::Draw)
// 				.addFunction("Init", &PointerShader::Init)
// 				.addFunction("Unbind", &PointerShader::Unbind)
			.endClass()
			.beginClass<Politics>("Politics")
				.addFunction("AddReputation", &Politics::AddReputation)
				.addFunction("Bribe", &Politics::Bribe)
				.addFunction("BribePlanet", &Politics::BribePlanet)
// 				.addFunction("CanLand", &Politics::CanLand)
// 				.addFunction("CanLand", &Politics::CanLand)
				.addFunction("CanUseServices", &Politics::CanUseServices)
				.addFunction("DominatePlanet", &Politics::DominatePlanet)
				.addFunction("Fine", &Politics::Fine)
				.addFunction("HasDominated", &Politics::HasDominated)
				.addFunction("IsEnemy", &Politics::IsEnemy)
				.addFunction("Offend", &Politics::Offend)
				.addFunction("Reputation", &Politics::Reputation)
				.addFunction("Reset", &Politics::Reset)
				.addFunction("ResetDaily", &Politics::ResetDaily)
				.addFunction("SetReputation", &Politics::SetReputation)
			.endClass()
// 			.beginClass<PositionIterator>("PositionIterator")
// 				.addFunction("Load", &PositionIterator::Load)
// 				.addFunction("PositionIterator", &PositionIterator::PositionIterator)
// 				.addFunction("SetName", &PositionIterator::SetName)
// 				.addFunction("begin", &PositionIterator::begin)
// 			.endClass()
			.beginClass<PreferencesPanel>("PreferencesPanel")
// 				.addFunction("Draw", &PreferencesPanel::Draw)
			.endClass()
			.beginClass<PrintData>("PrintData")
// 				.addFunction("Help", &PrintData::Help)
// 				.addFunction("IsPrintDataArgument", &PrintData::IsPrintDataArgument)
// 				.addFunction("Print", &PrintData::Print)
			.endClass()
			.beginClass<RaidFleet>("RaidFleet")
// 				.addFunction("Load", &RaidFleet::Load)
// 				.addFunction("MaxAttraction", &RaidFleet::MaxAttraction)
// 				.addFunction("MinAttraction", &RaidFleet::MinAttraction)
			.endClass()
			.beginClass<Random>("Random")
// 				.addFunction("Binomial", &Random::Binomial)
// // 				.addFunction("Int", &Random::Int)
// // 				.addFunction("Int", &Random::Int)
// 				.addFunction("Normal", &Random::Normal)
// 				.addFunction("Polya", &Random::Polya)
// 				.addFunction("Real", &Random::Real)
// 				.addFunction("Seed", &Random::Seed)
			.endClass()
// 			.beginClass<RandomEvent>("RandomEvent")
// 			.endClass()
			.beginClass<Rectangle>("Rectangle")
// 				.addFunction("Bottom", &Rectangle::Bottom)
// 				.addFunction("BottomRight", &Rectangle::BottomRight)
// 				.addFunction("Center", &Rectangle::Center)
// // 				.addFunction("Contains", &Rectangle::Contains)
// // 				.addFunction("Contains", &Rectangle::Contains)
// 				.addFunction("Dimensions", &Rectangle::Dimensions)
// 				.addFunction("FromCorner", &Rectangle::FromCorner)
// 				.addFunction("Height", &Rectangle::Height)
// 				.addFunction("Left", &Rectangle::Left)
// // 				.addFunction("Overlaps", &Rectangle::Overlaps)
// // 				.addFunction("Overlaps", &Rectangle::Overlaps)
// 				.addFunction("Right", &Rectangle::Right)
// 				.addFunction("Top", &Rectangle::Top)
// 				.addFunction("TopLeft", &Rectangle::TopLeft)
// 				.addFunction("Width", &Rectangle::Width)
// 				.addFunction("WithCorners", &Rectangle::WithCorners)
			.endClass()
			.beginClass<RenderBuffer>("RenderBuffer")
// 				.addFunction("Bottom", &RenderBuffer::Bottom)
// 				.addFunction("Deactivate", &RenderBuffer::Deactivate)
// // 				.addFunction("Draw", &RenderBuffer::Draw)
// // 				.addFunction("Draw", &RenderBuffer::Draw)
// 				.addFunction("Height", &RenderBuffer::Height)
// 				.addFunction("Init", &RenderBuffer::Init)
// 				.addFunction("Left", &RenderBuffer::Left)
// 				.addFunction("Right", &RenderBuffer::Right)
// 				.addFunction("SetFadePadding", &RenderBuffer::SetFadePadding)
// 				.addFunction("Top", &RenderBuffer::Top)
// 				.addFunction("Width", &RenderBuffer::Width)
			.endClass()
			.beginClass<RingShader>("RingShader")
// 				.addFunction("Add", &RingShader::Add)
// 				.addFunction("Bind", &RingShader::Bind)
// 				.addFunction("Draw", &RingShader::Draw)
// 				.addFunction("Init", &RingShader::Init)
// 				.addFunction("Unbind", &RingShader::Unbind)
			.endClass()
			.beginClass<SavedGame>("SavedGame")
// 				.addFunction("Clear", &SavedGame::Clear)
// 				.addFunction("IsLoaded", &SavedGame::IsLoaded)
// 				.addFunction("Load", &SavedGame::Load)
// 				.addFunction("SavedGame", &SavedGame::SavedGame)
			.endClass()
// 			.beginClass<ScreenDimensionsGuard>("ScreenDimensionsGuard")
// 				.addFunction("Bottom", &ScreenDimensionsGuard::Bottom)
// 				.addFunction("BottomLeft", &ScreenDimensionsGuard::BottomLeft)
// 				.addFunction("BottomRight", &ScreenDimensionsGuard::BottomRight)
// 				.addFunction("Deactivate", &ScreenDimensionsGuard::Deactivate)
// 				.addFunction("Dimensions", &ScreenDimensionsGuard::Dimensions)
// 				.addFunction("Height", &ScreenDimensionsGuard::Height)
// 				.addFunction("IsHighResolution", &ScreenDimensionsGuard::IsHighResolution)
// 				.addFunction("Left", &ScreenDimensionsGuard::Left)
// 				.addFunction("RawHeight", &ScreenDimensionsGuard::RawHeight)
// 				.addFunction("RawWidth", &ScreenDimensionsGuard::RawWidth)
// 				.addFunction("Right", &ScreenDimensionsGuard::Right)
// 				.addFunction("SetHighDPI", &ScreenDimensionsGuard::SetHighDPI)
// 				.addFunction("SetRaw", &ScreenDimensionsGuard::SetRaw)
// 				.addFunction("SetZoom", &ScreenDimensionsGuard::SetZoom)
// 				.addFunction("Top", &ScreenDimensionsGuard::Top)
// 				.addFunction("TopLeft", &ScreenDimensionsGuard::TopLeft)
// 				.addFunction("TopRight", &ScreenDimensionsGuard::TopRight)
// 				.addFunction("UserZoom", &ScreenDimensionsGuard::UserZoom)
// 				.addFunction("Width", &ScreenDimensionsGuard::Width)
// 				.addFunction("Zoom", &ScreenDimensionsGuard::Zoom)
// 			.endClass()
// 			.beginClass<ScrollVar>("ScrollVar")
// 				.addFunction("IsScrollAtMax", &ScrollVar::IsScrollAtMax)
// 				.addFunction("IsScrollAtMin", &ScrollVar::IsScrollAtMin)
// 				.addFunction("Scroll", &ScrollVar::Scroll)
// 				.addFunction("Scrollable", &ScrollVar::Scrollable)
// 				.addFunction("Set", &ScrollVar::Set)
// 				.addFunction("SetDisplaySize", &ScrollVar::SetDisplaySize)
// 				.addFunction("SetMaxValue", &ScrollVar::SetMaxValue)
// 			.endClass()
// 			.beginClass<Sentence>("Sentence")
// 				.addFunction("Choice", &Sentence::Choice)
// 				.addFunction("ExpandPhrases", &Sentence::ExpandPhrases)
// 				.addFunction("Get", &Sentence::Get)
// 				.addFunction("IsEmpty", &Sentence::IsEmpty)
// // 				.addFunction("Load", &Sentence::Load)
// // 				.addFunction("Load", &Sentence::Load)
// 				.addFunction("Phrase", &Sentence::Phrase)
// 			.endClass()
			.beginClass<Port::ServicesType>("ServicesType")
// 				.addFunction("CanRecharge", &ServicesType::CanRecharge)
// 				.addFunction("CustomLoaded", &ServicesType::CustomLoaded)
// 				.addFunction("GetRecharges", &ServicesType::GetRecharges)
// 				.addFunction("HasNews", &ServicesType::HasNews)
// 				.addFunction("HasService", &ServicesType::HasService)
// 				.addFunction("HasServices", &ServicesType::HasServices)
// 				.addFunction("Load", &ServicesType::Load)
// 				.addFunction("LoadDefaultSpaceport", &ServicesType::LoadDefaultSpaceport)
// 				.addFunction("LoadUninhabitedSpaceport", &ServicesType::LoadUninhabitedSpaceport)
			.endClass()
			.beginClass<Shader>("Shader")
// 				.addFunction("Attrib", &Shader::Attrib)
// 				.addFunction("Uniform", &Shader::Uniform)
			.endClass()
			.beginClass<ShipAICache>("ShipAICache")
				.addFunction("Calibrate", &ShipAICache::Calibrate)
				.addFunction("IsArtilleryAI", &ShipAICache::IsArtilleryAI)
				.addFunction("MinSafeDistance", &ShipAICache::MinSafeDistance)
				.addFunction("NeedsAmmo", &ShipAICache::NeedsAmmo)
				.addFunction("Recalibrate", &ShipAICache::Recalibrate)
				.addFunction("ShortestArtillery", &ShipAICache::ShortestArtillery)
				.addFunction("ShortestRange", &ShipAICache::ShortestRange)
			.endClass()
			.beginClass<ShipEvent>("ShipEvent")
// 				.addFunction("Type", &ShipEvent::Type)
			.endClass()
			.beginClass<ShipInfoDisplay>("ShipInfoDisplay")
// 				.addFunction("DrawAttributes", &ShipInfoDisplay::DrawAttributes)
// 				.addFunction("DrawAttributes", &ShipInfoDisplay::DrawAttributes)
				.addFunction("DrawOutfits", &ShipInfoDisplay::DrawOutfits)
				.addFunction("GetAttributesHeight", &ShipInfoDisplay::GetAttributesHeight)
				.addFunction("OutfitsHeight", &ShipInfoDisplay::OutfitsHeight)
			.endClass()
			.beginClass<ShipInfoPanel>("ShipInfoPanel")
// 				.addFunction("Draw", &ShipInfoPanel::Draw)
// // 				.addFunction("ShipInfoPanel", &ShipInfoPanel::ShipInfoPanel)
// // 				.addFunction("ShipInfoPanel", &ShipInfoPanel::ShipInfoPanel)
// 				.addFunction("Step", &ShipInfoPanel::Step)
			.endClass()
			.beginClass<ShipJumpNavigation>("ShipJumpNavigation")
				.addFunction("Calibrate", &ShipJumpNavigation::Calibrate)
				.addFunction("CanJump", &ShipJumpNavigation::CanJump)
				.addFunction("HasHyperdrive", &ShipJumpNavigation::HasHyperdrive)
				.addFunction("HasJumpDrive", &ShipJumpNavigation::HasJumpDrive)
				.addFunction("HasScramDrive", &ShipJumpNavigation::HasScramDrive)
				.addFunction("HyperdriveFuel", &ShipJumpNavigation::HyperdriveFuel)
				.addFunction("JumpDriveFuel", &ShipJumpNavigation::JumpDriveFuel)
				.addFunction("JumpFuel", &ShipJumpNavigation::JumpFuel)
				.addFunction("JumpRange", &ShipJumpNavigation::JumpRange)
				.addFunction("Recalibrate", &ShipJumpNavigation::Recalibrate)
				.addFunction("SetSystem", &ShipJumpNavigation::SetSystem)
// 				.addProperty("DEFAULT_HYPERDRIVE_COST", &ShipJumpNavigation::DEFAULT_HYPERDRIVE_COST)
// 				.addProperty("DEFAULT_JUMP_DRIVE_COST", &ShipJumpNavigation::DEFAULT_JUMP_DRIVE_COST)
// 				.addProperty("DEFAULT_SCRAM_DRIVE_COST", &ShipJumpNavigation::DEFAULT_SCRAM_DRIVE_COST)
			.endClass()
			.beginClass<ShipManager>("ShipManager")
				.addFunction("CanBeDone", &ShipManager::CanBeDone)
				.addFunction("Do", &ShipManager::Do)
				.addFunction("Giving", &ShipManager::Giving)
				.addFunction("Load", &ShipManager::Load)
				.addFunction("Save", &ShipManager::Save)
			.endClass()
			.beginClass<ShipyardPanel>("ShipyardPanel")
// 				.addFunction("ShipyardPanel", &ShipyardPanel::ShipyardPanel)
// 				.addFunction("Step", &ShipyardPanel::Step)
			.endClass()
// 			.beginClass<ShopPane>("ShopPane")
// 				.addFunction("Draw", &ShopPane::Draw)
// 				.addFunction("HasMessage", &ShopPane::HasMessage)
// 				.addFunction("ShopPanel", &ShopPane::ShopPanel)
// 				.addFunction("Step", &ShopPane::Step)
// // 				.addFunction("Zone", &ShopPane::Zone)
// // 				.addFunction("Zone", &ShopPane::Zone)
// 			.endClass()
// 			.beginClass<SortableColumn>("SortableColumn")
// 				.addFunction("Draw", &SortableColumn::Draw)
// // 				.addFunction("PlayerInfoPanel", &SortableColumn::PlayerInfoPanel)
// // 				.addFunction("PlayerInfoPanel", &SortableColumn::PlayerInfoPanel)
// 				.addFunction("Step", &SortableColumn::Step)
// 				.addProperty("layout", &SortableColumn::layout)
// 				.addProperty("name", &SortableColumn::name)
// 			.endClass()
			.beginClass<Sound>("Sound")
				.addFunction("Buffer", &Sound::Buffer)
				.addFunction("IsLooping", &Sound::IsLooping)
				.addFunction("Load", &Sound::Load)
			.endClass()
			.beginClass<SpaceportPanel>("SpaceportPanel")
				.addFunction("Draw", &SpaceportPanel::Draw)
// 				.addFunction("SpaceportPanel", &SpaceportPanel::SpaceportPanel)
				.addFunction("Step", &SpaceportPanel::Step)
				.addFunction("UpdateNews", &SpaceportPanel::UpdateNews)
			.endClass()
			.beginClass<Sprite>("Sprite")
// 				.addFunction("AddFrames", &Sprite::AddFrames)
// 				.addFunction("AddSwizzleMaskFrames", &Sprite::AddSwizzleMaskFrames)
// 				.addFunction("Center", &Sprite::Center)
// 				.addFunction("Frames", &Sprite::Frames)
// 				.addFunction("Height", &Sprite::Height)
// 				.addFunction("Sprite", &Sprite::Sprite)
// // 				.addFunction("SwizzleMask", &Sprite::SwizzleMask)
// // 				.addFunction("SwizzleMask", &Sprite::SwizzleMask)
// // 				.addFunction("Texture", &Sprite::Texture)
// // 				.addFunction("Texture", &Sprite::Texture)
// 				.addFunction("Unload", &Sprite::Unload)
// 				.addFunction("Width", &Sprite::Width)
			.endClass()
			.beginClass<SpriteSet>("SpriteSet")
// 				.addFunction("CheckReferences", &SpriteSet::CheckReferences)
			.endClass()
			.beginClass<StarField>("StarField")
				.addFunction("Draw", &StarField::Draw)
				.addFunction("Init", &StarField::Init)
				.addFunction("SetHaze", &StarField::SetHaze)
			.endClass()
			.beginClass<StartConditionsPanel>("StartConditionsPanel")
// 				.addFunction("Draw", &StartConditionsPanel::Draw)
			.endClass()
// 			.beginClass<StartInfo>("StartInfo")
// 				.addFunction("FinishLoading", &StartInfo::FinishLoading)
// 				.addFunction("IsUnlocked", &StartInfo::IsUnlocked)
// 				.addFunction("IsValid", &StartInfo::IsValid)
// 				.addFunction("Load", &StartInfo::Load)
// 				.addFunction("SetState", &StartInfo::SetState)
// 				.addFunction("StartConditions", &StartInfo::StartConditions)
// 				.addFunction("Visible", &StartInfo::Visible)
// 				.addProperty("credits", &StartInfo::credits)
// 				.addProperty("date", &StartInfo::date)
// 				.addProperty("debt", &StartInfo::debt)
// 				.addProperty("description", &StartInfo::description)
// 				.addProperty("name", &StartInfo::name)
// 				.addProperty("planet", &StartInfo::planet)
// 				.addProperty("system", &StartInfo::system)
// 			.endClass()
			.beginClass<StellarObject>("StellarObject")
				.addFunction("Distance", &StellarObject::Distance)
				.addFunction("HasValidPlanet", &StellarObject::HasValidPlanet)
				.addFunction("IsMoon", &StellarObject::IsMoon)
				.addFunction("IsStar", &StellarObject::IsStar)
				.addFunction("IsStation", &StellarObject::IsStation)
				.addFunction("Parent", &StellarObject::Parent)
				.addFunction("RadarType", &StellarObject::RadarType)
				.addFunction("Radius", &StellarObject::Radius)
			.endClass()
			.beginClass<System>("System")
// 				.addFunction("Asteroid::Count", &System::Asteroid::Count)
// 				.addFunction("Asteroid::Energy", &System::Asteroid::Energy)
// 				.addFunction("Asteroid::Name", &System::Asteroid::Name)
// 				.addFunction("Asteroid::Type", &System::Asteroid::Type)
				.addFunction("AsteroidBeltRadius", &System::AsteroidBeltRadius)
				.addFunction("AsteroidBelts", &System::AsteroidBelts)
				.addFunction("Asteroids", &System::Asteroids)
				.addFunction("Attributes", &System::Attributes)
				.addFunction("Danger", &System::Danger)
				.addFunction("Exports", &System::Exports)
				.addFunction("ExtraHyperArrivalDistance", &System::ExtraHyperArrivalDistance)
				.addFunction("ExtraJumpArrivalDistance", &System::ExtraJumpArrivalDistance)
				.addFunction("FindStellar", &System::FindStellar)
				.addFunction("Fleets", &System::Fleets)
				.addFunction("GetGovernment", &System::GetGovernment)
				.addFunction("HabitableZone", &System::HabitableZone)
				.addFunction("HasFuelFor", &System::HasFuelFor)
				.addFunction("HasOutfitter", &System::HasOutfitter)
				.addFunction("HasShipyard", &System::HasShipyard)
				.addFunction("HasTrade", &System::HasTrade)
				.addFunction("Hazards", &System::Hazards)
				.addFunction("Haze", &System::Haze)
				.addFunction("Hidden", &System::Hidden)
				.addFunction("HyperDepartureDistance", &System::HyperDepartureDistance)
				.addFunction("Inaccessible", &System::Inaccessible)
				.addFunction("InvisibleFenceRadius", &System::InvisibleFenceRadius)
				.addFunction("IsInhabited", &System::IsInhabited)
				.addFunction("IsValid", &System::IsValid)
				.addFunction("JumpDepartureDistance", &System::JumpDepartureDistance)
				.addFunction("JumpNeighbors", &System::JumpNeighbors)
				.addFunction("JumpRange", &System::JumpRange)
				.addFunction("Link", &System::Link)
				.addFunction("Links", &System::Links)
				.addFunction("Load", &System::Load)
// 				.addFunction("LoadObject", &System::LoadObject)
// 				.addFunction("LoadObjectHelper", &System::LoadObjectHelper)
				.addFunction("MinimumFleetPeriod", &System::MinimumFleetPeriod)
				.addFunction("MusicName", &System::MusicName)
				.addFunction("Name", &System::Name)
				.addFunction("Objects", &System::Objects)
				.addFunction("Position", &System::Position)
// 				.addFunction("Price::SetBase", &System::Price::SetBase)
// 				.addFunction("Price::Update", &System::Price::Update)
				.addFunction("RaidFleets", &System::RaidFleets)
				.addFunction("RamscoopFuel", &System::RamscoopFuel)
				.addFunction("SetDate", &System::SetDate)
				.addFunction("SetName", &System::SetName)
				.addFunction("SetSupply", &System::SetSupply)
				.addFunction("Shrouded", &System::Shrouded)
				.addFunction("SolarPower", &System::SolarPower)
				.addFunction("SolarWind", &System::SolarWind)
				.addFunction("StarfieldDensity", &System::StarfieldDensity)
				.addFunction("StepEconomy", &System::StepEconomy)
				.addFunction("Supply", &System::Supply)
				.addFunction("Trade", &System::Trade)
				.addFunction("Unlink", &System::Unlink)
// 				.addFunction("UpdateNeighbors", &System::UpdateNeighbors)
				.addFunction("UpdateSystem", &System::UpdateSystem)
				.addFunction("VisibleNeighbors", &System::VisibleNeighbors)
			.endClass()
// 			.beginClass<SystemEntry>("SystemEntry")
// 			.endClass()
// 			.beginClass<T>("T")
// 				.addFunction("Dialog", &T::Dialog)
// 				.addFunction("Draw", &T::Draw)
// 				.addFunction("ParseTextNode", &T::ParseTextNode)
// 			.endClass()
			.beginClass<TaskQueue>("TaskQueue")
// 				.addFunction("ProcessSyncTasks", &TaskQueue::ProcessSyncTasks)
// 				.addFunction("Wait", &TaskQueue::Wait)
			.endClass()
			.beginClass<TestData>("TestData")
// 				.addFunction("Change", &TestData::Change)
// 				.addFunction("CheckReferences", &TestData::CheckReferences)
// 				.addFunction("DrawMenuBackground", &TestData::DrawMenuBackground)
// 				.addFunction("FinishLoading", &TestData::FinishLoading)
// 				.addFunction("GetProgress", &TestData::GetProgress)
// 				.addFunction("UpdateSystems", &TestData::UpdateSystems)
			.endClass()
			.beginClass<TextReplacements>("TextReplacements")
// 				.addFunction("Load", &TextReplacements::Load)
// 				.addFunction("Revert", &TextReplacements::Revert)
// 				.addFunction("Substitutions", &TextReplacements::Substitutions)
			.endClass()
			.beginClass<TradingPanel>("TradingPanel")
// 				.addFunction("Draw", &TradingPanel::Draw)
// 				.addFunction("Step", &TradingPanel::Step)
// 				.addFunction("TradingPanel", &TradingPanel::TradingPanel)
			.endClass()
// 			.beginClass<NPC::Trigger>("Trigger")
// 				.addFunction("HasFailed", &Trigger::HasFailed)
// 				.addFunction("HasSucceeded", &Trigger::HasSucceeded)
// 				.addFunction("IsLeftBehind", &Trigger::IsLeftBehind)
// 				.addFunction("Load", &Trigger::Load)
// 				.addFunction("NPC", &Trigger::NPC)
// 				.addFunction("Save", &Trigger::Save)
// 				.addFunction("ShouldSpawn", &Trigger::ShouldSpawn)
// 				.addFunction("UpdateSpawning", &Trigger::UpdateSpawning)
// 				.addFunction("Validate", &Trigger::Validate)
// 			.endClass()
// 			.beginClass<Type>("Type")
// // 				.addFunction("begin", &Type::begin)
// // 				.addFunction("begin", &Type::begin)
// 				.addFunction("clear", &Type::clear)
// 				.addFunction("empty", &Type::empty)
// // 				.addFunction("end", &Type::end)
// // 				.addFunction("end", &Type::end)
// 				.addFunction("erase", &Type::erase)
// 				.addFunction("erase_if", &Type::erase_if)
// 				.addFunction("reserve", &Type::reserve)
// 				.addFunction("size", &Type::size)
// 			.endClass()
			.beginClass<UI>("UI")
// // 				.addFunction("CanSave", &UI::CanSave)
// // 				.addFunction("CanSave", &UI::CanSave)
// 				.addFunction("DrawAll", &UI::DrawAll)
// 				.addFunction("GetMouse", &UI::GetMouse)
// 				.addFunction("Handle", &UI::Handle)
// 				.addFunction("IsDone", &UI::IsDone)
// 				.addFunction("IsEmpty", &UI::IsEmpty)
// 				.addFunction("IsTop", &UI::IsTop)
// 				.addFunction("Pop", &UI::Pop)
// 				.addFunction("PopThrough", &UI::PopThrough)
// // 				.addFunction("Push", &UI::Push)
// // 				.addFunction("Push", &UI::Push)
// 				.addFunction("Quit", &UI::Quit)
// 				.addFunction("Reset", &UI::Reset)
// 				.addFunction("StepAll", &UI::StepAll)
			.endClass()
			.beginClass<Variant>("Variant")
				.addFunction("IsValid", &Variant::IsValid)
				.addFunction("Load", &Variant::Load)
				.addFunction("Strength", &Variant::Strength)
// 				.addFunction("Variant", &Variant::Variant)
				.addFunction("Weight", &Variant::Weight)
			.endClass()
			.beginClass<Visual>("Visual")
// 				.addFunction("Move", &Visual::Move)
			.endClass()
			.beginClass<Weapon>("Weapon")
				.addFunction("Acceleration", &Weapon::Acceleration)
				.addFunction("AmmoUsage", &Weapon::AmmoUsage)
				.addFunction("AntiMissile", &Weapon::AntiMissile)
				.addFunction("Arc", &Weapon::Arc)
				.addFunction("BlastRadius", &Weapon::BlastRadius)
				.addFunction("BurnDamage", &Weapon::BurnDamage)
				.addFunction("BurstCount", &Weapon::BurstCount)
				.addFunction("BurstReload", &Weapon::BurstReload)
				.addFunction("CanCollideAsteroids", &Weapon::CanCollideAsteroids)
				.addFunction("CanCollideMinables", &Weapon::CanCollideMinables)
				.addFunction("CanCollideShips", &Weapon::CanCollideShips)
				.addFunction("CorrosionDamage", &Weapon::CorrosionDamage)
				.addFunction("DamageDropoff", &Weapon::DamageDropoff)
				.addFunction("DisabledDamage", &Weapon::DisabledDamage)
				.addFunction("DischargeDamage", &Weapon::DischargeDamage)
				.addFunction("DisruptionDamage", &Weapon::DisruptionDamage)
				.addFunction("DoesDamage", &Weapon::DoesDamage)
				.addFunction("Drag", &Weapon::Drag)
				.addFunction("EnergyDamage", &Weapon::EnergyDamage)
				.addFunction("FadeOut", &Weapon::FadeOut)
				.addFunction("FiringBurn", &Weapon::FiringBurn)
				.addFunction("FiringCorrosion", &Weapon::FiringCorrosion)
				.addFunction("FiringDischarge", &Weapon::FiringDischarge)
				.addFunction("FiringDisruption", &Weapon::FiringDisruption)
				.addFunction("FiringEnergy", &Weapon::FiringEnergy)
				.addFunction("FiringForce", &Weapon::FiringForce)
				.addFunction("FiringFuel", &Weapon::FiringFuel)
				.addFunction("FiringHeat", &Weapon::FiringHeat)
				.addFunction("FiringHull", &Weapon::FiringHull)
				.addFunction("FiringIon", &Weapon::FiringIon)
				.addFunction("FiringLeak", &Weapon::FiringLeak)
				.addFunction("FiringScramble", &Weapon::FiringScramble)
				.addFunction("FiringShields", &Weapon::FiringShields)
				.addFunction("FiringSlowing", &Weapon::FiringSlowing)
				.addFunction("FuelDamage", &Weapon::FuelDamage)
				.addFunction("HasDamageDropoff", &Weapon::HasDamageDropoff)
				.addFunction("HeatDamage", &Weapon::HeatDamage)
				.addFunction("HitForce", &Weapon::HitForce)
				.addFunction("Homing", &Weapon::Homing)
				.addFunction("HullDamage", &Weapon::HullDamage)
				.addFunction("Inaccuracy", &Weapon::Inaccuracy)
				.addFunction("InfraredTracking", &Weapon::InfraredTracking)
				.addFunction("IonDamage", &Weapon::IonDamage)
				.addFunction("IsDamageScaled", &Weapon::IsDamageScaled)
				.addFunction("IsFused", &Weapon::IsFused)
				.addFunction("IsGravitational", &Weapon::IsGravitational)
				.addFunction("IsParallel", &Weapon::IsParallel)
				.addFunction("IsPhasing", &Weapon::IsPhasing)
				.addFunction("IsSafe", &Weapon::IsSafe)
				.addFunction("IsStreamed", &Weapon::IsStreamed)
				.addFunction("IsWeapon", &Weapon::IsWeapon)
				.addFunction("LeakDamage", &Weapon::LeakDamage)
				.addFunction("Lifetime", &Weapon::Lifetime)
				.addFunction("LoadWeapon", &Weapon::LoadWeapon)
				.addFunction("MaxDropoff", &Weapon::MaxDropoff)
				.addFunction("MinableDamage", &Weapon::MinableDamage)
				.addFunction("MissileStrength", &Weapon::MissileStrength)
				.addFunction("OpticalTracking", &Weapon::OpticalTracking)
				.addFunction("Piercing", &Weapon::Piercing)
				.addFunction("Prospecting", &Weapon::Prospecting)
				.addFunction("RadarTracking", &Weapon::RadarTracking)
				.addFunction("RandomLifetime", &Weapon::RandomLifetime)
				.addFunction("RandomVelocity", &Weapon::RandomVelocity)
				.addFunction("Range", &Weapon::Range)
				.addFunction("RelativeDisabledDamage", &Weapon::RelativeDisabledDamage)
				.addFunction("RelativeEnergyDamage", &Weapon::RelativeEnergyDamage)
				.addFunction("RelativeFiringEnergy", &Weapon::RelativeFiringEnergy)
				.addFunction("RelativeFiringFuel", &Weapon::RelativeFiringFuel)
				.addFunction("RelativeFiringHeat", &Weapon::RelativeFiringHeat)
				.addFunction("RelativeFiringHull", &Weapon::RelativeFiringHull)
				.addFunction("RelativeFiringShields", &Weapon::RelativeFiringShields)
				.addFunction("RelativeFuelDamage", &Weapon::RelativeFuelDamage)
				.addFunction("RelativeHeatDamage", &Weapon::RelativeHeatDamage)
				.addFunction("RelativeHullDamage", &Weapon::RelativeHullDamage)
				.addFunction("RelativeMinableDamage", &Weapon::RelativeMinableDamage)
				.addFunction("RelativeShieldDamage", &Weapon::RelativeShieldDamage)
				.addFunction("Reload", &Weapon::Reload)
				.addFunction("SafeRange", &Weapon::SafeRange)
				.addFunction("ScramblingDamage", &Weapon::ScramblingDamage)
				.addFunction("ShieldDamage", &Weapon::ShieldDamage)
				.addFunction("SlowingDamage", &Weapon::SlowingDamage)
				.addFunction("SplitRange", &Weapon::SplitRange)
				.addFunction("TotalLifetime", &Weapon::TotalLifetime)
				.addFunction("Tracking", &Weapon::Tracking)
				.addFunction("TractorBeam", &Weapon::TractorBeam)
				.addFunction("TriggerRadius", &Weapon::TriggerRadius)
				.addFunction("Turn", &Weapon::Turn)
				.addFunction("TurretTurn", &Weapon::TurretTurn)
				.addFunction("Velocity", &Weapon::Velocity)
				.addFunction("WeightedVelocity", &Weapon::WeightedVelocity)
// 				.addProperty("facing", &Weapon::facing)
// 				.addProperty("offset", &Weapon::offset)
			.endClass()
			.beginClass<Wormhole>("Wormhole")
				.addFunction("IsAutogenerated", &Wormhole::IsAutogenerated)
				.addFunction("IsMappable", &Wormhole::IsMappable)
				.addFunction("IsValid", &Wormhole::IsValid)
				.addFunction("Load", &Wormhole::Load)
				.addFunction("LoadFromPlanet", &Wormhole::LoadFromPlanet)
				.addFunction("SetPlanet", &Wormhole::SetPlanet)
			.endClass()
// 			.beginClass<WormholeStrategy>("WormholeStrategy")
// 			.endClass()
			.beginClass<WrappedText>("WrappedText")
// 				.addFunction("Draw", &WrappedText::Draw)
// 				.addFunction("Height", &WrappedText::Height)
// 				.addFunction("Index", &WrappedText::Index)
// 				.addFunction("LineHeight", &WrappedText::LineHeight)
// 				.addFunction("LongestLineWidth", &WrappedText::LongestLineWidth)
// 				.addFunction("ParagraphBreak", &WrappedText::ParagraphBreak)
// 				.addFunction("Pos", &WrappedText::Pos)
// 				.addFunction("SetAlignment", &WrappedText::SetAlignment)
// 				.addFunction("SetFont", &WrappedText::SetFont)
// 				.addFunction("SetLineHeight", &WrappedText::SetLineHeight)
// 				.addFunction("SetParagraphBreak", &WrappedText::SetParagraphBreak)
// 				.addFunction("SetTabWidth", &WrappedText::SetTabWidth)
// 				.addFunction("SetTruncate", &WrappedText::SetTruncate)
// 				.addFunction("SetWrapWidth", &WrappedText::SetWrapWidth)
// 				.addFunction("TabWidth", &WrappedText::TabWidth)
// // 				.addFunction("Wrap", &WrappedText::Wrap)
// // 				.addFunction("Wrap", &WrappedText::Wrap)
// 				.addFunction("WrapWidth", &WrappedText::WrapWidth)
// 				.addFunction("WrappedText", &WrappedText::WrappedText)
			.endClass()
// 			.beginClass<Zoom>("Zoom")
// 				.addFunction("BreakTargeting", &Zoom::BreakTargeting)
// 				.addFunction("Click", &Zoom::Click)
// 				.addFunction("Draw", &Zoom::Draw)
// 				.addFunction("Engine", &Zoom::Engine)
// 				.addFunction("GiveCommand", &Zoom::GiveCommand)
// 				.addFunction("Go", &Zoom::Go)
// // 				.addFunction("Place", &Zoom::Place)
// // 				.addFunction("Place", &Zoom::Place)
// 				.addFunction("RClick", &Zoom::RClick)
// 				.addFunction("SelectGroup", &Zoom::SelectGroup)
// 				.addFunction("Step", &Zoom::Step)
// 				.addFunction("Wait", &Zoom::Wait)
// 				.addProperty("alpha", &Zoom::alpha)
// // 				.addProperty("angle", &Zoom::angle)
// // 				.addProperty("angle", &Zoom::angle)
// 				.addProperty("base", &Zoom::base)
// 				.addProperty("center", &Zoom::center)
// 				.addProperty("color", &Zoom::color)
// 				.addProperty("count", &Zoom::count)
// 				.addProperty("disabled", &Zoom::disabled)
// 				.addProperty("frame", &Zoom::frame)
// 				.addProperty("inner", &Zoom::inner)
// 				.addProperty("outer", &Zoom::outer)
// // 				.addProperty("position", &Zoom::position)
// // 				.addProperty("position", &Zoom::position)
// // 				.addProperty("radius", &Zoom::radius)
// // 				.addProperty("radius", &Zoom::radius)
// 				.addProperty("type", &Zoom::type)
// 				.addProperty("unit", &Zoom::unit)
// 			.endClass()
// 			.beginClass<can>("can")
// 				.addFunction("Alpha", &can::Alpha)
// 				.addFunction("Center", &can::Center)
// 				.addFunction("GetFrame", &can::GetFrame)
// 				.addFunction("GetSwizzle", &can::GetSwizzle)
// 				.addFunction("HasSprite", &can::HasSprite)
// 				.addFunction("Height", &can::Height)
// 				.addFunction("LoadSprite", &can::LoadSprite)
// 				.addFunction("Radius", &can::Radius)
// 				.addFunction("SaveSprite", &can::SaveSprite)
// 				.addFunction("Scale", &can::Scale)
// 				.addFunction("SetSprite", &can::SetSprite)
// 				.addFunction("SetSwizzle", &can::SetSwizzle)
// 				.addFunction("ShouldBeRemoved", &can::ShouldBeRemoved)
// 				.addFunction("Unit", &can::Unit)
// 				.addFunction("Width", &can::Width)
// 				.addFunction("Zoom", &can::Zoom)
// 			.endClass()
// 			.beginClass<is>("is")
// 				.addFunction("Load", &is::Load)
// 				.addFunction("MakePayment", &is::MakePayment)
// 				.addFunction("Maximum", &is::Maximum)
// 				.addFunction("MissPayment", &is::MissPayment)
// 				.addFunction("PayExtra", &is::PayExtra)
// 				.addFunction("Payment", &is::Payment)
// 				.addFunction("PrecisePayment", &is::PrecisePayment)
// 				.addFunction("Principal", &is::Principal)
// 				.addFunction("Save", &is::Save)
// 				.addFunction("Term", &is::Term)
// 			.endClass()
// 			.beginClass<that>("that")
// 				.addFunction("Clear", &that::Clear)
// 				.addFunction("SetHardpoints", &that::SetHardpoints)
// 			.endClass()
// 			.beginClass<will>("will")
// 				.addFunction("FromString", &will::FromString)
// 				.addFunction("ToString", &will::ToString)
// 				.addFunction("clone", &will::clone)
// 			.endClass()
		.endNamespace();
}
